\begin{thebibliography}{10}

\bibitem{artho2011iterative}
C.~Artho.
\newblock Iterative delta debugging.
\newblock {\em International Journal on Software Tools for Technology Transfer
  (STTT)}, 13(3):223--246, 2011.

\bibitem{bertolino07softwaretesting}
A.~Bertolino and A.~Bertolino.
\newblock Software testing research: Achievements, challenges, dreams.
\newblock In {\em Proceedings of the Future of Software Engineering at ICSE
  2007}, pages 85--103. IEEE-CS Press, 2007.

\bibitem{burger2008replaying}
M.~Burger and A.~Zeller.
\newblock Replaying and isolating failing multi-object interactions.
\newblock In {\em Proceedings of the 2008 international workshop on dynamic
  analysis: held in conjunction with the ISSTA 2008}, pages 71--77. ACM, 2008.

\bibitem{Froehlich:2001}
A.~A. Fr{\"{o}}hlich.
\newblock {\em Application-Oriented Operating Systems}.
\newblock Number~17 in GMD Research Series. GMD - Forschungszentrum
  Informationstechnik, Sankt Augustin, Aug. 2001.

\bibitem{atemes}
C.-S. Koong, C.~Shih, P.-A. Hsiung, H.-J. Lai, C.-H. Chang, W.~C. Chu, N.-L.
  Hsueh, and C.-T. Yang.
\newblock Automatic testing environment for multi-core embedded
  software-atemes.
\newblock {\em J. Syst. Softw.}, 85(1):43--60, Jan. 2012.

\bibitem{Larson:2013:MDAT}
E.~Larson and R.~Palting.
\newblock Mdat: a multithreading debugging and testing tool.
\newblock In {\em Proceeding of the 44th ACM technical symposium on Computer
  science education}, SIGCSE '13, pages 403--408, New York, NY, USA, 2013. ACM.

\bibitem{DMEC}
M.~Ludwich and A.~Frohlich.
\newblock Interfacing hardware devices to embedded java.
\newblock In {\em Computing System Engineering (SBESC), 2011 Brazilian
  Symposium on}, pages 176 --181, nov. 2011.

\bibitem{orso2005selective}
A.~Orso and B.~Kennedy.
\newblock Selective capture and replay of program executions.
\newblock In {\em ACM SIGSOFT Software Engineering Notes}, volume~30, pages
  1--7. ACM, 2005.

\bibitem{parnin2011automated}
C.~Parnin and A.~Orso.
\newblock Are automated debugging techniques actually helping programmers.
\newblock In {\em Proceedings of the 2011 International Symposium on Software
  Testing and Analysis}, pages 199--209. ACM, 2011.

\bibitem{parsa2011statistical}
S.~Parsa, M.~Asadi-Aghbolaghi, and M.~Vahidi-Asl.
\newblock Statistical debugging using a hierarchical model of correlated
  predicates.
\newblock {\em Artificial Intelligence and Computational Intelligence}, pages
  251--256, 2011.

\bibitem{qi2011locating}
D.~Qi, M.~Ngo, T.~Sun, and A.~Roychoudhury.
\newblock Locating failure-inducing environment changes.
\newblock In {\em Proceedings of the 10th ACM SIGPLAN-SIGSOFT workshop on
  Program analysis for software tools}, pages 29--36. ACM, 2011.

\bibitem{sasirekha2011program}
N.~Sasirekha, A.~Robert, and D.~Hemalatha.
\newblock Program slicing techniques and its applications.
\newblock {\em Arxiv preprint arXiv:1108.1352}, 2011.

\bibitem{schneider2004ten}
S.~Schneider and L.~Fraleigh.
\newblock The ten secrets of embedded debugging.
\newblock {\em Embedded Systems Programming}, 17:21--32, 2004.

\bibitem{seo}
J.~Seo, A.~Sung, B.~Choi, and S.~Kang.
\newblock Automating embedded software testing on an emulated target board.
\newblock In H.~Zhu, W.~E. Wong, and A.~M. Paradkar, editors, {\em AST}, pages
  44--50. IEEE, 2007.

\bibitem{Stroustrup:c++}
B.~Stroustrup.
\newblock {\em The design and evolution of C++}.
\newblock ACM Press/Addison-Wesley Publishing Co., New York, NY, USA, 1994.

\bibitem{tassey2002economic}
G.~Tassey.
\newblock The economic impacts of inadequate infrastructure for software
  testing.
\newblock {\em National Institute of Standards and Technology}, pages 02--3,
  2002.

\bibitem{Xu:2005:BSP:1050849.1050865}
B.~Xu, J.~Qian, X.~Zhang, Z.~Wu, and L.~Chen.
\newblock A brief survey of program slicing.
\newblock {\em SIGSOFT Softw. Eng. Notes}, 30(2):1--36, Mar. 2005.

\bibitem{JSWjsw0803603616}
C.~Zhang, J.~Yang, D.~Yan, S.~Yang, and Y.~Chen.
\newblock Automated breakpoint generation for debugging.
\newblock {\em Journal of Software}, 8(3), 2013.

\bibitem{zhang2009capturing}
Z.~Zhang, W.~Chan, T.~Tse, B.~Jiang, and X.~Wang.
\newblock Capturing propagation of infected program states.
\newblock In {\em Proceedings of the the 7th joint meeting of the European
  software engineering conference and the ACM SIGSOFT symposium on The
  foundations of software engineering}, pages 43--52. ACM, 2009.

\bibitem{zheng2006statistical}
A.~Zheng, M.~Jordan, B.~Liblit, M.~Naik, and A.~Aiken.
\newblock Statistical debugging: simultaneous identification of multiple bugs.
\newblock In {\em Proceedings of the 23rd international conference on Machine
  learning}, pages 1105--1112. ACM, 2006.

\end{thebibliography}
