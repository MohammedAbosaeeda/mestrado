//""REAL-TIME QUICKSORT ALGORITHM. WORST-CASE TIME IS 200MS"""""""""""""""""/
#define	LUA_APP		"	local array = {											\
312 , 674 , 544 , 325 , 648 , 640 , 441 , 44 , 934 , 553 ,					\
352 , 90 , 525 , 714 , 796 , 84 , 239 , 955 , 485 , 359 ,					\
424 , 564 , 613 , 59 , 146 , 580 , 586 , 12 , 86 , 625 ,					\
714 , 961 , 545 , 90 , 485 , 919 , 617 , 977 , 603 , 291 ,					\
394 , 283 , 973 , 670 , 554 , 20 , 799 , 614 , 229 , 100 ,					\
166 , 91 , 34 , 170 , 748 , 329 , 169 , 733 , 936 , 756 ,					\
633 , 245 , 266 , 36 , 622 , 308 , 523 , 43 , 903 , 691 ,					\
976 , 796 , 972 , 234 , 190 , 191 , 631 , 878 , 272 , 714 ,					\
532 , 321 , 859 , 849 , 290 , 163 , 927 , 168 , 65 , 599 ,					\
969 , 753 , 832 , 610 , 255 , 583 , 17 , 120 , 935 , 445 ,					\
60 , 148 , 641 , 42 , 552 , 759 , 259 , 8 , 785 , 344 ,						\
990 , 759 , 113 , 111 , 932 , 454 , 874 , 307 , 79 , 615 ,					\
720 , 243 , 134 , 69 , 806 , 421 , 380 , 110 , 669 , 743 ,					\
931 , 953 , 146 , 321 , 44 , 265 , 791 , 809 , 355 , 557 ,					\
269 , 701 , 637 , 47 , 307 , 282 , 641 , 5 , 603 , 874 ,					\
647 , 75 , 224 , 564 , 217 , 597 , 0 , 783 , 532 , 192 ,					\
673 , 996 , 944 , 49 , 441 , 72 , 593 , 484 , 382 , 196 ,					\
763 , 557 , 632 , 94 , 692 , 903 , 76 , 840 , 98 , 171 ,					\
209 , 291 , 842 , 304 , 458 , 734 , 264 , 143 , 31 , 448 ,					\
838 , 51 , 375 , 866 , 410 , 640 , 419 , 823 , 889 , 261 ,					\
985 , 191 , 476 , 832 , 805 , 73 , 363 , 639 , 986 , 587 ,					\
199 , 426 , 358 , 637 , 41 , 924 , 133 , 167 , 697 , 278 ,					\
941 , 707 , 106 , 899 , 383 , 685 , 829 , 896 , 875 , 405 ,					\
261 , 151 , 71 , 813 , 91 , 558 , 604 , 242 , 725 , 691 ,					\
535 , 308 , 66 , 887 , 843 , 560 , 129 , 714 , 355 , 938 ,					\
564 , 985 , 543 , 529 , 943 , 341 , 366 , 218 , 179 , 50 ,					\
324 , 216 , 732 , 187 , 890 , 135 , 710 , 445 , 456 , 650 ,					\
562 , 413 , 808 , 869 , 496 , 22 , 885 , 578 , 349 , 711 ,					\
845 , 45 , 813 , 756 , 627 , 427 , 410 , 442 , 925 , 139 ,					\
631 , 402 , 108 , 205 , 217 , 121 , 748 , 457 , 710 , 183 ,					\
6 , 383 , 877 , 881 , 89 , 714 , 714 , 850 , 719 , 958 ,					\
817 , 465 , 553 , 750 , 672 , 68 , 848 , 173 , 214 , 869 ,					\
800 , 249 , 679 , 937 , 372 , 310 , 133 , 494 , 422 , 67 ,					\
518 , 299 , 516 , 910 , 504 , 960 , 9 , 4 , 391 , 992 ,						\
276 , 591 , 989 , 365 , 276 , 990 , 889 , 926 , 742 , 331 ,					\
680 , 611 , 948 , 312 , 540 , 744 , 599 , 305 , 991 , 703 ,					\
154 , 44 , 259 , 586 , 473 , 253 , 870 , 184 , 509 , 613 ,					\
83 , 846 , 407 , 594 , 45 , 457 , 29 , 93 , 289 , 90 ,						\
433 , 520 , 928 , 999 , 523 , 307 , 382 , 954 , 896 , 41 ,					\
20 , 172 , 472 , 202 , 459 , 470 , 451 , 470 , 839 , 334 ,					\
795 , 986 , 839 , 499 , 621 , 800 , 497 , 85 , 465 , 144 ,					\
871 , 853 , 281 , 577 , 532 , 628 , 538 , 983 , 368 , 326 ,					\
933 , 791 , 556 , 984 , 291 , 11 , 622 , 773 , 622 , 315 ,					\
374 , 468 , 273 , 547 , 482 , 869 , 444 , 164 , 881 , 636 ,					\
85 , 544 , 558 , 784 , 299 , 236 , 492 , 238 , 356 , 789 ,					\
456 , 751 , 138 , 311 , 249 , 622 , 194 , 63 , 395 , 863 ,					\
823 , 181 , 454 , 944 , 171 , 59 , 439 , 349 , 999 , 797 ,					\
402 , 246 , 619 , 746 , 667 , 370 , 255 , 863 , 943 , 188 ,					\
318 , 938 , 172 , 136 , 404 , 357 , 594 , 944 , 155 , 271 ,					\
898 , 690 , 225 , 458 , 751 , 556 , 729 , 323 , 464 , 379 ,					\
938 , 691 , 63 , 621 , 842 , 954 , 595 , 711 , 261 , 187 ,					\
584 , 392 , 815 , 185 , 433 , 968 , 683 , 801 , 420 , 899 ,					\
402 , 917 , 217 , 835 , 69 , 714 , 750 , 326 , 415 , 588 ,					\
560 , 876 , 184 , 17 , 483 , 643 , 677 , 259 , 341 , 851 ,					\
617 , 595 , 511 , 74 , 140 , 906 , 235 , 925 , 498 , 933 ,					\
990 , 475 , 85 , 623 , 450 , 70 , 953 , 430 , 122 , 911 ,					\
760 , 39 , 503 , 6 , 56 , 953 , 488 , 246 , 110 , 552 ,						\
394 , 635 , 764 , 449 , 915 , 374 , 723 , 911 , 843 , 686 ,					\
459 , 700 , 302 , 137 , 461 , 496 , 590 , 918 , 116 , 694 ,					\
461 , 572 , 713 , 844 , 84 , 114 , 646 , 95 , 465 , 20 ,					\
774 , 500 , 480 , 178 , 234 , 362 , 140 , 73 , 504 , 665 ,					\
685 , 43 , 584 , 431 , 429 , 127 , 260 , 627 , 839 , 139 ,					\
539 , 58 , 262 , 944 , 444 , 761 , 611 , 466 , 82 , 297 ,					\
178 , 734 , 416 , 704 , 770 , 409 , 468 , 104 , 215 , 280 ,					\
939 , 816 , 717 , 155 , 56 , 120 , 237 , 481 , 296 , 340 ,					\
687 , 38 , 831 , 20 , 15 , 924 , 776 , 969 , 768 , 52 ,						\
681 , 758 , 874 , 870 , 563 , 76 , 761 , 382 , 281 , 123 ,					\
87 , 202 , 98 , 689 , 719 , 147 , 204 , 977 , 516 , 555 ,					\
78 , 471 , 392 , 855 , 7 , 74 , 997 , 466 , 871 , 733 ,						\
240 , 944 , 869 , 64 , 40 , 265 , 856 , 415 , 13 , 855 ,					\
890 , 141 , 123 , 583 , 625 , 443 , 407 , 675 , 950 , 140 ,					\
19 , 248 , 801 , 388 , 813 , 150 , 831 , 609 , 416 , 234 ,					\
211 , 493 , 655 , 958 , 588 , 45 , 978 , 561 , 20 , 697 ,					\
673 , 528 , 566 , 723 , 513 , 174 , 816 , 573 , 349 , 77 ,					\
70 , 762 , 669 , 231 , 568 , 278 , 23 , 966 , 937 , 310 ,					\
539 , 121 , 270 , 438 , 18 , 662 , 210 , 498 , 449 , 392 ,					\
842 , 747 , 915 , 121 , 249 , 476 , 738 , 227 , 600 , 984 ,					\
552 , 661 , 134 , 819 , 123 , 794 , 228 , 933 , 966 , 519 ,					\
663 , 526 , 888 , 368 , 614 , 457 , 477 , 637 , 361 , 143 ,					\
942 , 385 , 444 , 733 , 191 , 253 , 439 , 759 , 500 , 24 ,					\
444 , 411 , 407 , 90 , 844 , 853 , 685 , 828 , 362 , 843 ,					\
648 , 362 , 511 , 512 , 687 , 904 , 969 , 418 , 842 , 76 ,					\
229 , 573 , 159 , 905 , 711 , 643 , 355 , 89 , 730 , 22 ,					\
80 , 150 , 52 , 370 , 213 , 161 , 227 , 206 , 918 , 702 ,					\
177 , 686 , 956 , 857 , 467 , 222 , 425 , 88 , 758 , 817 ,					\
405 , 25 , 71 , 19 , 512 , 578 , 260 , 406 , 471 , 962 ,					\
232 , 125 , 496 , 730 , 268 , 729 , 784 , 616 , 464 , 585 ,					\
277 , 60 , 217 , 423 , 203 , 366 , 724 , 295 , 602 , 153 ,					\
293 , 341 , 392 , 51 , 688 , 828 , 847 , 157 , 320 , 452 ,					\
943 , 187 , 289 , 247 , 293 , 477 , 142 , 964 , 998 , 989 ,					\
633 , 935 , 482 , 753 , 162 , 234 , 233 , 9 , 501 , 663 ,					\
995 , 99 , 976 , 977 , 950 , 325 , 176 , 616 , 970 , 164 ,					\
330 , 998 , 500 , 174 , 158 , 999 , 147 , 167 , 927 , 890 ,					\
101 , 367 , 638 , 741 , 432 , 330 , 537 , 577 , 37 , 3 ,					\
300 , 380 , 697 , 211 , 173 , 850 , 741 , 913 , 564 , 501 ,					\
39 , 740 , 329 , 727 , 477 , 184 , 936 , 197 , 874 , 229 ,					\
204 , 131 , 101 , 258 , 659 , 482 , 472 , 651 , 588 , 803 ,					\
961 , 155 , 165 , 378 , 176 , 348 , 481 , 769 , 272 , 260 ,					\
843 , 141 , 91 , 84 , 785 , 272 , 733 , 826 , 572 , 115 ,					\
353 , 193 , 647 , 235 , 892 , 577 , 267 , 869 , 300 , 486 }					\
																			\
function qsort(x,l,u,f)														\
	if l<u then																\
		local m=math.random(u-(l-1))+l-1									\
		x[l],x[m]=x[m],x[l]													\
		local t=x[l]														\
		m=l																	\
		local i=l+1															\
		while i<=u do														\
			if f(x[i],t) then												\
				m=m+1														\
				x[m],x[i]=x[i],x[m]											\
			end																\
			i=i+1															\
		end																	\
		x[l],x[m]=x[m],x[l]													\
		qsort(x,l,m-1,f)													\
		qsort(x,m+1,u,f)													\
	end																		\
end																			\
																			\
function testsort(x,n)														\
	qsort(x,1,n,function (x,y) return x<y end)								\
end																			\
																			\
local iterations = 10														\
for it=1,iterations do														\
	local init = os.time()+1												\
	while init ~= os.time() do end											\
	local limit = array[it+1]												\
	local new_array = {}													\
	for j=1,limit do														\
		table.insert(new_array,array[j])									\
	end																		\
	testsort(new_array,limit)												\
	if os.time() == init then												\
		collectgarbage(\"collect\")											\
	end																		\
	assert(2 > (os.time()-init))											\
	collectgarbage(\"stop\")												\
end																			"

