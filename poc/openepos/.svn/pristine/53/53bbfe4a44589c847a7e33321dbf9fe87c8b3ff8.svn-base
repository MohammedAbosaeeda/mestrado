#ifndef ___JOSEK__OS___H
#define ___JOSEK__OS___H
#include <signal.h>

#ifdef __x86_64
#define CTXSIZE 136
#else
#define CTXSIZE 40
#endif

typedef unsigned char STATUSTYPE;
typedef unsigned char TASKTYPE;
typedef unsigned char RESOURCETYPE;
typedef unsigned char EVENTMASKTYPE;

#define E_OK			0
#define E_OS_ACCESS		1
#define E_OS_CALLLEVEL	2
#define E_OS_ID			3
#define E_OS_LIMIT		4
#define E_OS_NUFUNC		5
#define E_OS_RESOURCE	6
#define E_OS_STATE		7
#define E_OS_VALUE		8

#define TASK(name) void JOSEK_TASK_##name()

/* TODO These need to be autogenerated */
#define task_job1 1
#define task_job2 2
#define task_job3 3
#define RES_MOO 1
#define RES_FOO 2
#define RES_BAR 3

void Schedule();
void TerminateTask();
STATUSTYPE ActivateTask(TASKTYPE id);
void ChainTask(TASKTYPE id);
void GetTaskID(TASKTYPE *id);
void GetTaskState(TASKTYPE id, unsigned char *state);
void EnableAllInterrupts();
void DisableAllInterrupts();
void ResumeAllInterrupts();
void SuspendAllInterrupst();
void ResumeOSInterrupts();
void SuspendOSInterrupts();
void GetResource(RESOURCETYPE res);
void ReleaseResource(RESOURCETYPE res);
STATUSTYPE SetEvent(TASKTYPE id, EVENTMASKTYPE mask);
STATUSTYPE ClearEvent(EVENTMASKTYPE mask);
STATUSTYPE GetEvent(TASKTYPE id, EVENTMASKTYPE *mask);
STATUSTYPE WaitEvent(EVENTMASKTYPE mask);

#endif
