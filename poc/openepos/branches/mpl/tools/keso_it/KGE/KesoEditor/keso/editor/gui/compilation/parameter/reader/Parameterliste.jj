
options {
	STATIC = false;
}

PARSER_BEGIN(KesoParameterReader)

package keso.editor.gui.compilation.parameter.reader;

import java.util.Vector;
import keso.editor.gui.compilation.parameter.*;
import java.io.StringReader;

public class KesoParameterReader {
	public static void parseFile(String parameterlist) throws Exception {
		KesoParameterReader parser = null;
		try {
			parser = new KesoParameterReader(new StringReader(parameterlist));
		} catch (Throwable ex) {
			ex.printStackTrace();
			throw new Exception(ex);
		}

		try {
			parser.start();
		} catch (Throwable ex) {
			ex.printStackTrace();
			throw new Exception(ex);
		}
	}
}

PARSER_END(KesoParameterReader)

SKIP : { " " | "\t" | "\r" | "\n" }

TOKEN : {
	<DESCRIPTION: "@" (~["\n"])*> |
	<LINECOMMENT: "#" (~["\n"])*> |
	<DEFAULTVALUE: "default value"> |
	<DEFSEPARATOR: "separator"> |
	<STRING: "string"> |
	<BOOLEAN: "boolean"> |
	<IDENTIFIER: <LETTER> (<LETTER>|<DIGIT>)*> |
	<NUMBER: (<DIGIT>)+> |
	<LETTER: ["a"-"z","A"-"Z","_","/"]> |
	<DIGIT: ["0"-"9"]> |
	<LBRACE: "{"> |
	<RBRACE: "}"> |
	<DQUOTE: "\""> |
	<LBRACKET: "["> |
	<RBRACKET: "]"> |
	<SEMICOLON: ";"> |
	<COMMA: ","> |
	<ASSIGNMENT: "="> |
	<DOT: "."> |
	<LPAREN: "("> |
	<RPAREN: ")">
}


void start() : {
	Token possiblevalue;
	Vector possiblevalues = new Vector();
	
	Token name;
	
	Token sep;
	String separator = "";
	
	Token propertydescription;
	StringBuffer description = new StringBuffer();
	
	Token value;
	String defaultvalue = null;
	
	String type = null;
} {
	(
		{
			description = new StringBuffer();
			possiblevalues = new Vector();
			separator = "";
			defaultvalue = null;
			type = null;
		}	
	
		(
			(
				propertydescription = <DESCRIPTION>
				{
					if (description == null) {
						description = new StringBuffer();
					} else {
						if (description.length() != 0) {
							description.append(" ");
						}
					}
					propertydescription.image = propertydescription.image.trim();
					propertydescription.image = propertydescription.image.substring(1);
					if (propertydescription.image.length() != 0) {
						description.append(propertydescription.image);
					}
				}
					
			)
			|
			(<LINECOMMENT>)
		)*	
		(
			(
				<STRING>
				{
					type = "string";
				}
				name = <IDENTIFIER>				
				(
					<ASSIGNMENT>
					
					<LBRACE>
						possiblevalue = <IDENTIFIER>
						{
							possiblevalues.add(possiblevalue.image);
						}
						(
							<COMMA>
							possiblevalue = <IDENTIFIER>
							{
								possiblevalues.add(possiblevalue.image);
							}
						)*
					<RBRACE>
				)?
				
				(
					<DEFSEPARATOR>
					sep = <IDENTIFIER>					
					{
						if (sep.image.equals("blank")) {
							separator = " ";
						} else if (sep.image.equals("colon")) {
							separator = ":";
						} else if (sep.image.equals("assignment")) {
							separator = "=";
						}
					}
				)?
				
			) | (
				<BOOLEAN>
				{
					type = "boolean";
				}
				
				name = <IDENTIFIER>
			)
		)
		(
			<DEFAULTVALUE>
			value = <IDENTIFIER>
			{
				defaultvalue = value.image;
			}
		)?
		<SEMICOLON>
		{
			KesoParameterList.add(description.toString(), type, name.image, separator, possiblevalues, defaultvalue);
		}
	)*	
}
