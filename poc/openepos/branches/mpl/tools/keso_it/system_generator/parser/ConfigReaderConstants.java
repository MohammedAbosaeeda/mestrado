/* Generated By:JavaCC: Do not edit this line. ConfigReaderConstants.java */
package josek.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ConfigReaderConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CPU = 5;
  /** RegularExpression Id. */
  int OBJECTDEFINITION = 6;
  /** RegularExpression Id. */
  int OS = 7;
  /** RegularExpression Id. */
  int COUNTER = 8;
  /** RegularExpression Id. */
  int TASK = 9;
  /** RegularExpression Id. */
  int EVENT = 10;
  /** RegularExpression Id. */
  int ISR = 11;
  /** RegularExpression Id. */
  int ALARM = 12;
  /** RegularExpression Id. */
  int RESOURCE = 13;
  /** RegularExpression Id. */
  int HEXINTEGER_LITERAL = 14;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 15;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 16;
  /** RegularExpression Id. */
  int HEXDECIMAL_LITERAL = 17;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 18;
  /** RegularExpression Id. */
  int EXPONENT = 19;
  /** RegularExpression Id. */
  int BOOL_TRUE = 20;
  /** RegularExpression Id. */
  int BOOL_FALSE = 21;
  /** RegularExpression Id. */
  int LINECOMMENT = 22;
  /** RegularExpression Id. */
  int IDENTIFIER = 23;
  /** RegularExpression Id. */
  int LETTER = 24;
  /** RegularExpression Id. */
  int DIGIT = 25;
  /** RegularExpression Id. */
  int LBRACE = 26;
  /** RegularExpression Id. */
  int RBRACE = 27;
  /** RegularExpression Id. */
  int LBRACKET = 28;
  /** RegularExpression Id. */
  int RBRACKET = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int COLON = 33;
  /** RegularExpression Id. */
  int PLUS = 34;
  /** RegularExpression Id. */
  int MINUS = 35;
  /** RegularExpression Id. */
  int ASSIGNMENT = 36;
  /** RegularExpression Id. */
  int INCLUDE = 37;
  /** RegularExpression Id. */
  int QMARK = 38;
  /** RegularExpression Id. */
  int LSHARP = 39;
  /** RegularExpression Id. */
  int RSHARP = 40;
  /** RegularExpression Id. */
  int FILENAME = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"CPU\"",
    "<OBJECTDEFINITION>",
    "\"OS\"",
    "\"COUNTER\"",
    "\"TASK\"",
    "\"EVENT\"",
    "\"ISR\"",
    "\"ALARM\"",
    "\"RESOURCE\"",
    "<HEXINTEGER_LITERAL>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEXDECIMAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<BOOL_TRUE>",
    "<BOOL_FALSE>",
    "<LINECOMMENT>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<LBRACE>",
    "<RBRACE>",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "\"+\"",
    "\"-\"",
    "\"=\"",
    "\"#include\"",
    "\"\\\"\"",
    "\"<\"",
    "\">\"",
    "<FILENAME>",
  };

}
