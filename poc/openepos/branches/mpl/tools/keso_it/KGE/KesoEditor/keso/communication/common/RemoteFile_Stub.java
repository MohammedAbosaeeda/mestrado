// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package keso.communication.common;

public final class RemoteFile_Stub
    extends java.rmi.server.RemoteStub
    implements keso.communication.common.IRemoteFile, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_close_0;
    private static java.lang.reflect.Method $method_getFileName_1;
    private static java.lang.reflect.Method $method_nextBlock_2;
    private static java.lang.reflect.Method $method_open_3;
    
    static {
	try {
	    $method_close_0 = keso.communication.common.IRemoteFile.class.getMethod("close", new java.lang.Class[] {});
	    $method_getFileName_1 = keso.communication.common.IRemoteFile.class.getMethod("getFileName", new java.lang.Class[] {});
	    $method_nextBlock_2 = keso.communication.common.IRemoteFile.class.getMethod("nextBlock", new java.lang.Class[] {});
	    $method_open_3 = keso.communication.common.IRemoteFile.class.getMethod("open", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemoteFile_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of close()
    public void close()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_close_0, null, -4742752445160157748L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getFileName()
    public java.lang.String getFileName()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getFileName_1, null, 2060938455315091100L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of nextBlock()
    public byte[] nextBlock()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_nextBlock_2, null, -479870699271041792L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of open()
    public void open()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_open_3, null, 2108930122558793662L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
