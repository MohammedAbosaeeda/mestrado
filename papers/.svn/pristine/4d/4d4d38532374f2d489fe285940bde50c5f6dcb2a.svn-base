% ------------------------------------------------------------------------------
\section{Case study: scheduling in mobile WSN} \label{case}

The proposed approach was integrated to the power management mechanism of \epos~\cite{Frohlich:IJDSN:2011}.
\epos~is a component-based operating system for embedded applications.
% The approach implementation, following the philosophy behind \epos~power manager, is modeled as a scenario adapter, making it not intrusive to system components.
Also, we ran this implementation in the \emote~platform~\cite{Project:EPOS:2012}, a module for the development of low-power wireless sensor network applications.
Hardware evaluation was performed by analysis of data in an actual implementation.
The scheduling approach was evaluated by means of simulation taking the characterization of the mentioned platform into consideration.
The remaining of this section describes the setup of the evaluation scenario and the obtained results.


\subsection{\emote~Solar Energy Harvesting Circuit} \label{circ_eval}

In order to adequately characterize the developed circuit integrated to the \emote~sensing platform, an outdoor test was performed.
The test period was 62~hours and 45 minutes.
For the test, the \emote~radio was configured to constantly transmit random data.
This $100~\%$ duty cycle was used in order to test critical conditions and also to reduce test duration.
By reducing the duty cycle, it would be necessary to extend the test to several weeks, since the total current consumption when the system is in standby mode is only around $5~\mu A$, i.e., more than 5,000 times smaller than the $29~mA$ it consumes when transmitting data at full power.

%referencia EPOSMote Hardware

Figure~\ref{fig:bat_volt} shows the battery voltage behavior during the test.
In all recharge cycles, the battery has almost reached the fully recharged voltage.
However, there are differences among the peak values, which shows that the maximum voltage reduced from one peak to the previous one.
This fact is explained analyzing the amount of energy delivered by the battery.
Figure~\ref{fig:energy} shows that the system has lost energy after each cycle,
which means that, for a $100\%$ duty cycle, this system would not be self-sufficient.

\fig{0.26}{bat_volt}{Battery voltage behavior.}

The test started on March 16, 2012 at 9:15~pm, i.e. during night, what explains why the first descending slope in Figure~\ref{fig:energy} is shorter than the other two.
Current integration was used in order to calculate the energy expended on slopes.
The first complete slope spent $738.43~mAh$, while the second spent $746.96~mAh$.
The small difference between these values is justified by the difference on the daylight duration, which, although similar, was not perfectly equal in both days.
The analysis of these values is of paramount importance when selecting the capacity of the storage unit.
This extreme case~(i.e. $100\%$ duty cycle) helps to justify the need for an energy-aware scheduler in the system.
The descending slopes must be reduced in order to have a self-sufficient system.
% The energy consumption reduction procedure is done by executing only the critical tasks, which allows the system to work for longer periods.
% Predicting how much energy is going to be delivered by the solar panel is the key knowledge for deciding which best-effort tasks will be executed.  

\fig{0.26}{energy}{Energy evolution.}


% This prediction is possible when analyzing the relation between current delivered by the solar panel and the solar irradiance.
Figure~\ref{fig:i_panel} shows the current delivered by the solar panel, which was calculated by subtracting the system's current~(considered constant at $56~mA$ due to the constant duty cycle) from the input/output battery current.
Figure~\ref{fig:irrad} shows the solar irradiance acquired during the test by a pyranometer placed close to the system's photovoltaic panel at the same inclination~($27~^\circ$).
The current delivered by the solar panel and the solar irradiance were plotted in order to obtain an equation to correlate them.
This curve and its linear approximation are shown in Figure~\ref{fig:i_irrad_final} and Equation~\ref{eq:i_irrad}.
In this equation, $I_{panel}$ is the current delivered by the solar panel in mA and \emph{Irrad} is the solar irradiance in $W/m^{2}$.
This plot is an additional contribution of this work, since it is through this linear equation that the energy-aware task scheduler can map weather forecast to energy input.
This plot will motivate the development of new heuristics for the scheduler which will further improve its efficiency.

\fig{0.26}{i_panel}{Current delivered by the solar panel.}
\fig{0.26}{irrad}{Solar irradiance variation.}
\fig{0.26}{i_irrad_final}{Relation between current and solar irradiance.}

\begin{eqnarray}
I_{panel} = 0.20628 \times Irrad \label{eq:i_irrad}
\end{eqnarray}

Solar irradiance and delivered current present a linear behavior when variations in temperature are not taken into consideration.
% For this first approximation, a linear equation was used.
Figure~\ref{fig:temp} adds temperature variation, which is the main reason for the spread points in Figure~\ref{fig:i_irrad_final}.
A new mathematical model considering temperature variation is being developed in order to design an energy-aware task scheduler with more precise environmental prediction.

\fig{0.26}{temp}{Temperature variation.}


\subsection{Evaluation Scenario}

The application used to evaluate the approach is a mobility-enabled wireless sensor network.
This network runs the Ant-based Dynamic Hop Optimization Protocol~(\adhop) over an IP network using IEEE 802.15.4.
\adhop~is a self-configuring, reactive routing protocol designed with the typical limitations of sensor nodes in mind, energy in particular~\cite{Okazaki:SCPA:2011}.
\adhop's reactive component relies on an \emph{Ant Colony Optimization} algorithm to discover and maintain routes.
Ants are sent out to track routes, leaving a trail of pheromone on their way back.
Routes with a higher pheromone deposit are preferred for data exchange.

\epos~scheduler relies on \epos~power manager to adaptively run the system.
In \epos~adaptive task scheduling model, tasks are classified as hard real-time or best-effort.
In order to guarantee system lifetime, \epos~energy scheduler reserves the amount of energy the system will need to run hard real-time tasks until a desired lifetime is reached.
Best-effort tasks are only allowed to execute when excess energy exists.
In \epos~scheduler, different heuristics can be used to control system quality degradation when best-effort tasks are prevented from executing.
Once specific heuristics for managing energy consumption are not the focus of the present work, only \epos~global energy allocation heuristic was considered~\cite{Hoeller:SMC:2011}.

The objective of this case study is to demonstrate how the employment of the proposed energy input measurement mechanism enhanced system performance.
Thus, \adhop~had to be modified.
\adhop's tasks have then been classified as hard real-time or best-effort.
The main idea behind this setup was to homogenize the battery discharge for every node in the network to enhance the lifetime of the network as a whole.
Considering the radio the most energy-hungry component in a wireless sensing node, we made the design decision of modeling the routing activity of \adhop~as a best-effort task, as shown by the task set at Table~\ref{tab:adhop-taskset}.
The basic node functionality of sensing a value~(task $Sense$) and forwarding it through the radio to the next node~(task $Forward$) where modeled as hard real-time tasks.
The functionality of forwarding other nodes' packets~(and ants) when acting as a ``router'' was modeled as two best-effort tasks, one for monitoring the channel for arriving messages~($LPL$ - Low Power Listen), and another to effectively receive the message and route it to another node~($Route$).

\tab{adhop-taskset}{\adhop~case-study tasks' parameters\protect\footnotemark[3].}

\footnotetext[3]{
% T: task;
Period in $ms$;
WCET: worst-case execution time in $ms$;
WCEC: worst-case energy consumption in $\eta Ah$;
25-days: energy consumption for the targeted lifetime~(25 days) in $mAh$.}
\footnotetext[4]{This is a worst-case scenario as values of ``P'' and, as consequence, ``25-days'', may change due to adaptation.}
\footnotetext[5]{``Route'' is a sporadic task. Once it is a best-effort task in the system, we consider a hypothetic frequency of $2$ Hz~(period of 500 $ms$) to show the impact of routing in the node energy consumption.}

The simulation time was set to 25 days.
By analyzing the task set, it is possible to compute the total energy consumption of hard real-time tasks for the desired lifetime to be of $602~mAh$.
As a consequence, the initial battery charge for the system has to be greater than that to allow the system to reserve energy for the critical part of the application.
The battery capacity specified for this experiment is an of-the-shelf CR-2/$3V$ battery with a total capacity of $850~mAh$
%%%%% the one described in Section~\ref{circ_design}, i.e., a $2,100~mAh$ NiMH battery.
% For the simulation, the voltage model of the battery was defined by the cubic approximation shown in Figure~\ref{fig:bat_volt_charge}, that shows the expected battery charge for a battery voltage level reading.

\fig{.69}{adhop-char-ddr}{Data delivery response to BET rate.}

\fig{.69}{adhop-char-energy}{Average power and energy consumption response to BET rate.}

The simulation was performed in two steps.
In the first step, a simulation using the \textsc{OmNET++} Simulator characterized the application's response to variations in the execution rate of best-effort tasks~(BET rate).
As can be seen in Figures~\ref{fig:adhop-char-ddr} and~\ref{fig:adhop-char-energy}, lower energy consumption at lower BET rates comes at the cost of lower data delivery rate.
Also, it is possible to observe in the graphic that BET rates above $50\%$ have no significant impact on packet delivery.
Thus, it is assumed that BET rate will only be adjusted within the range $[0,50]$ as a means to further save energy.

In the second simulation step, the energy consumption of the system was simulated for 25 days, i.e., the target lifetime.
As can be seen in Figure~\ref{fig:sim-bet_rate}, the employment of the measurement mechanisms proposed here enhanced the BET rate.
This happens because the proposed approach allows for more frequent adaptations that reduces the pessimistic bias of the used scheduler.
It is also possible to observe that the new approach shows a better recover after relatively long periods of low irradiation, such as the one found between days 7 and 11 in Figure~\ref{fig:sim-irrad}.
Short periods of low irradiation, like the one on day 19, are better supported by the new approach.
This can be observed by the slight decrease on BET rate on day 19 for the original method, while the new method is still reaching $50\%$.
Over the 25-days period, $32.93\%$ of the best-effort tasks were executed using the new approach, against $26.81\%$ of BET rate of the former approach.
This meas a total gain of $1.23$ times.


\fig{.69}{sim-bet_rate}{Average BET rate over 25 days of execution using with and without the proposed approach.}

\fig{.69}{sim-irrad}{Daily irradiation levels used for simulation.}

