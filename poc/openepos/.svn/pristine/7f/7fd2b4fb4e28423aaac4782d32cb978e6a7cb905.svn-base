/*! @class System::AVR_EEPROM
    @ingroup med_eeprom
    @brief AVR EEPROM Mediator Common Declarations

    AVR MCUs contains an EEPROM memory. It is organized as a separate data space, in which single bytes can be read and written. The EEPROM has an endurance of at least 100,000 write/erase cycles. <i>Memory Programming</i> in AVR datasheet contains a detailed description on EEPROM programming in SPI, JTAG, or Parallel Programming mode.

    <!--************************************************************************************************-->
    @fn unsigned char System::AVR_EEPROM::read(const Address & addr)
    Reads an unsigned char from <i>addr</i> EEPROM address.
    @returns byte read
    @param addr EEPROM Address to be read
    <!--************************************************************************************************-->
    @fn void System::AVR_EEPROM::write(const Address & addr, unsigned char data)
    Writes an unsigned char <i>data</i> to <i>addr</i> EEPROM address.
    @param data Data to be written
    @param addr EEPROM Address to be written
    <!--************************************************************************************************-->
    @fn int  System::AVR_EEPROM::size() const
    @returns eeprom size in bytes
*/
