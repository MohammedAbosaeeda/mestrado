/* THIS FILE IS AUTO GENERATED BY KESO! DON'T EDIT */

/* Class: irr */

#ifndef __irr_H__
#define __irr_H__ 1
#include <keso_types.h>
#include "global.h"
object_t* keso_irr_alloc(class_id_t class_id, obj_size_t size, obj_size_t roff);

typedef struct _irr_listel_s {
	volatile unsigned short size;        /* size in slots, used by the classid in objects */
	volatile unsigned char  mode;        /* Locking mode, unused in objects. */
	volatile unsigned char  alloccolor;  /* Allocation color */
	volatile struct _irr_listel_s *next; /* Points to the next listelement */
} irr_listel_t;

/* Inlining Level for Writebarriers. The following levels are defined
 * 0: no inlining. keso_irr_writebarrier is always called.
 * 1: inlining of the check that looks if the GC is running. If it is, pushObject is called.
 */
#define KESO_WRBR_INLINE_LEVEL 1
extern unsigned char irr_gc_active_domain;

void keso_irr_pushObject(object_t *obj);
#if KESO_WRBR_INLINE_LEVEL==0
void keso_irr_writebarrier(object_t** addr, object_t* value);
#endif


#endif

