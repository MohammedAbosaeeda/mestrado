/* Stuff to suport a specific application - "autogenerated" by the OIL compiler ;) */
#include <epos2osek/configurations.hh>
#include <epos2osek_defs.h>

/* Application source: one_plus_two_task_test.cc */

// Application tasks
int func_taskOne(void);
int func_taskTwo(void);
int func_taskThree(void);
/* BasicTask constructor parameters:
 *  @entry : function pointer
 *  @taskIdentity : TaskType
 *  @taskState : TaskStateType
 *  @taskPriority : SomeTaskPriorities
 */
BasicTask * appTasks[3];

BasicTask ** CreateAllTasks(int & numberOfTasks) {
    /* AUTOSTART = FALSE; */
    appTasks[0] = new BasicTask(func_taskOne, 0, OSEK_SUSPENDED, OSEK_LOWEST);
    /* AUTOSTART = TRUE; */
    appTasks[1] = new BasicTask(func_taskTwo, 0, OSEK_READY, OSEK_HIGH);
    /* AUTOSTART = FALSE; */
    appTasks[2] = new BasicTask(func_taskThree, 0, OSEK_SUSPENDED, OSEK_NORMAL);
	numberOfTasks = 3;
    return appTasks;
}

/* ------------------------------------------------------------------------- */

/* Application ------------------------------------------------------------- */
/* Expected execution:
	TaskTwo	
*/

#include <epos2osek.h>

int main() {
    print("At main function\n");
    StartOS(OSDEFAULTAPPMODE);
    return 0;
}

void StartupHook() {
    print("At StartupHook\n");
}

/* AUTOSTART = FALSE; */
TASK(taskOne) {
    print("I am a task one!\n");
	
	TerminateTask();
}

/* AUTOSTART = TRUE; */
TASK(taskTwo) {
    print("I am task two!\n");
	
	TerminateTask();
}

/* AUTOSTART = FALSE; */
TASK(taskThree) {
    print("I am task three!\n");
	
	TerminateTask();
}


/* ------------------------------------------------------------------------- */
