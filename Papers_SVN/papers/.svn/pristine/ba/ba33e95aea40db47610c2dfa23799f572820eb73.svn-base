%-------------------------------------------------------------------------------
% METAS
%-------------------------------------------------------------------------------
\section{Metas do Trabalho}

A fase de definição das metas do projeto, pela complexidade inerente de um sistema de arquivos distribuído, se estendeu por longo tempo. Algumas das características do {\sdfs} foram definidas a priori, outras apenas durante o desenvolvimento da primeira versão. Entretanto houve uma linha de pensamento que esteve presente durante todas as etapas: fazer um sistema de arquivos distribuído que fosse realmente simples, apesar da complexidade dos temas envolvidos.

As principais metas definidas para o projeto são:

\begin{itemize}

\item Portabilidade: O {\sdfs} não é um projeto isolado, devendo ser incorporado por um projeto de âmbito maior, além de ser usado como material de apoio ao ensino de sistemas distribuídos. Para permitir o porte para outras plataformas, definiu-se que o sistema deveria ser escrito em {\cansi} (na verdade foi utilizado um compilador {\cpp} com capacidade de gerar código {\cansi}). Ainda no tocante a portabilidade, definiu-se que os serviços do {\sdfs} deveriam ser compatíveis com a norma 1003.1 ({\posix}) do {\ieee} \cite{iee88}, de forma a possibilitar a integração desse sistema de arquivos com sistemas operacionais do tipo {\unix}.

\item Paralelismo: Um aspecto muito explorado na definiçao do {\sdfs} foi o aproveitamento do paralelismo natural de um sistema de arquivos, tanto no sentido de paralelisar a execução de um serviço como no sentido de executar múltiplos serviços concomitantemente. O primeiro esforço para a paralelisação do {\sdfs} foi definir a sua implemetação não como um processo, mas como uma coleção de processos seqüenciais comunicantes \cite{hoa85}.

\item Distribuição dos servidores: Nos primórdios do desenvolvimento do projeto não se tinha uma plataforma definida, as possibilidades envolviam equipamentos tão diferentes como PCs e um multicomputador sob desenvolvimento no {\cpgcc} \cite{cor93}. Isso influenciou o projeto no sentido de que não se tinha ao certo o nível de distribuição do sistema, que poderia variar de uma única máquina, até o caso do multicomputador, onde cada servidor poderia executar em um processador próprio. Definiu-se então que o sistema deveria ser extremamente flexível no que diz respeito a distribuição de seus servidores, de tal forma que uma alteração no nível de distribuição envolvesse apenas uma reconfiguração do sistema, dispensando recompilações e religações.

\item Execução em redes de computadores: A {\inet}, através do protocolo TCP/IP, foi escolhida para caracterizar a implementação do {\sdfs} por ser a rede mais abrangente e mais estável dos dias atuais. Assim, os aspectos do sistema relativos a nomenclatura de {\hosts}, identificação de {\hosts}, roteamento de mensagens e outros, são diretamente herdados da {\inet} \cite{pos87}. Isso possibilita que o {\sdfs} tenha seu escopo de utilização equiparado ao da própria rede {\inet}.

\item Heterogeneidade de equipamentos: Decidiu-se que o sistema não deveria levar em conta qualquer aspecto de {\hw}, possibilitando, assim, que o {\sdfs} seja executado em ambientes heterogêneos. Toda a funcionalidade necessária a execução do sistema é fornecida por um núcleo que gerencia os processos e implementa um mecanismo de comunicação entre eles. Esse núcleo encontra-se em desenvolvimento no {\cpgcc}, por hora sua funcionalidade foi simulada sobre o sistema operacional {\sunos} da {\sun}.

\item Distribuição da árvore de diretórios: Uma vez que se possibilitou a distribuição dos servidores do sistema de arquivo, decidiu-se também permitir a distribuição da árvore de diretórios, de forma que um cliente possa acessar um arquivo remoto anexado à árvore de diretórios local de forma transparente.

\item Idempotência: Uma questão de extrema relevância para sistemas distribuídos sobre redes de computadores é a tolerância às falhas da rede, assunto que não está no escopo deste projeto. Entretanto, para dar alguma robustez ao sistema, decidiu-se que o sistema de arquivos seria idempotente. Desta forma, os servidores não guardam informações sobre o estado dos clientes e cada mensagem de solicitação de serviço carrega todas as informações relativas ao serviço, o que, além de facilitar a definição de um mecanismo que permita a replicação de servidores, simplifica o processo de reativação dos servidores após uma falha.

\item Autenticação de mensagens: O mecanismo de autenticação de mensagens de solicitação de serviços adotado pelo {\sdfs} consiste em gerar-se uma chave, levando em conta o identificador do arquivo em questão, uma informação temporal e o identificador do usuário que está solicitando o serviço. Sempre que um cliente solicita um serviço ao sistema de arquivos, ele fornece o identificador do arquivo e a chave, que validará ou não a solicitação.

\end{itemize}
