World(Keso) {
	System(kesocopter) {
		Modules="debug:tricore:kesocopter";

		Target = "tricore";
		ProcessorType = "tc1796";

		OsekOS (KesoOS) {
			STATUS = "STANDARD";
			
			STARTUPHOOK = false {}
			ERRORHOOK = false {}
			SHUTDOWNHOOK = false {}
			PRETASKHOOK = false {}
			POSTTASKHOOK = false {}
			USEGETSERVICEID = "FALSE";
			USEPARAMETERACCESS = "FALSE";
			USERESSCHEDULER = "FALSE";
			MICROCONTROLLER = "TC1796";
			TRICORE_RT_CLOCK = "NOT_USED";
			TRICORE_NUM_CSA = "50";
			CC = "AUTO";
			SCHEDULE = "AUTO";
			USERMAIN = "FALSE";
			STACKCHECK = "FALSE";
			EXTRA_RUNTIME_CHECKS = "FALSE";
			SERVICETRACE = "FALSE";
			USELASTERROR = "FALSE";
			PREISRHOOK = false {}
			POSTISRHOOK = false {}
		}

		Domain (dom1) {
			Heap = IdleRoundRobin {
				HeapSize=1024;
				SlotSize=8;
				Group = "Default";
			}

			Task (task1) {
				MainClass="kesocopter/dev/engine/TestHWEngine";
				MainMethod="launch()V";

				Autostart = false {
				}
				Priority = "5";
				Schedule = "non";
				Activation = "1";
				CallScheduler = "no";
				Type = "basic";
				Stacksize = "4096";
			}

			Alarm (alarm1) {
				UseCounter = "counter1";
				Action = ACTIVATETASK {
					UseTask = "task1";
				}
	
				Autostart = true {
					Appmode = "OSDEFAULTAPPMODE";
					Alarmtime = "100";
					Cycletime = "100";
				}
			}
		}

		Counter (counter1) {
			MAXALLOWEDVALUE = "65536";
	
			# Minimum cycle time for associated alarms in counter ticks
			MINCYCLE = "1";
	
			# Number of ticks required to reach a counter specific unit
			TICKSPERBASE = "1";
	
			# (PO) Hardware timer used for this counter or USERCOUNTER if application
			# increases the counter
			# (GPTU{0,1}_T{0,1}, STM_T{0,1})
			TRICORE_TIMER = "STM_T0";
	
			# (PO) Relative interrupt level of this counter
			TRICORE_IRQLEVEL = "2";

			# (PO) Ticktime in ns for this counter, if not limited by hardware
			TIME_IN_NS = "1000000";
		}
	}
}

