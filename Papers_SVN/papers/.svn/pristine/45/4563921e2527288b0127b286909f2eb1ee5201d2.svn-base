\section{Conclusion}
\label{sec:Conclusion}
In this paper, we have shown how to construct a development environment for embedded applications based on specific hardware/software requirements and introduce the automatic exchange of configuration parameters as one anatomic part of fully automated debug.

The integrated development environment provides independence of the physical target platform for development and test. Its an important step, since some embedded systems may not be able to store the extra data needed to support debug. The impact of enable debug information in code size and in the execution time of the real-world application was more than 80\%. Also, developers no longer need to spend time understanding a new development platform whenever some characteristic of the embedded system changes.

The automatic exchange was evaluated using two kinds of test. The fully automated test works with no prior information of the application, but it was possible to generate valid configurations, that could be tested as alternative solutions. In partial automated test all generated configurations were valid and the report was useful to discovery that some parameter values were better then others.

In this sense, was possible to realize that even a small part of the complete automated solution produce answers to help developers find and fix a bug. With only a hundred tries was possible to find error/restriction in the code. Thus, as future work we can integrate the automatic exchange script with a tool that has artificial intelligence, in order to achieve a conscious exchange of type parameters.

