%!PS-Adobe-2.0 EPSF-2.0
%%Title: ReadingAFGT.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 23 19:22:47 2003
%%For: felipe@m1s2 (Felipe Zimmermann Homma)
%%BoundingBox: 0 0 414 239
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 239 moveto 0 0 lineto 414 0 lineto 414 239 lineto closepath clip newpath
-4.9 240.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06299 0.06299 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
gs  clippath
525 2370 m 572 2332 l 478 2214 l 530 2327 l 431 2252 l cp
eoclip
n 540 2340 m
 360 2115 l gs col0 s gr gr

% arrowhead
n 431 2252 m 530 2327 l 478 2214 l  col0 s
% Polyline
n 450 2385 m
 90 2385 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
225 2070 m
gs 1 -1 sc (drain) col0 sh gr
% Polyline
n 2025 900 m
 2025 990 l gs col0 s gr 
% Polyline
n 2070 945 m
 1980 945 l gs col0 s gr 
% Ellipse
n 2160 945 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 2250 945 m
 2340 945 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
2160 675 m
gs 1 -1 sc (Vt\(R\)) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 1305 225 m
 1305 315 l gs col0 s gr 
% Polyline
n 1350 270 m
 1260 270 l gs col0 s gr 
% Ellipse
n 1440 270 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 1530 270 m
 1620 270 l gs col0 s gr 
% Polyline
n 450 2565 m 900 2565 l
 1080 2295 l gs col0 s gr 
% Polyline
n 2430 2565 m 1980 2565 l
 1800 2295 l gs col0 s gr 
% Polyline
n 450 2295 m 2430 2295 l 2430 3015 l 450 3015 l
 cp gs col0 s gr 
% Polyline
gs  clippath
2380 2396 m 2361 2453 l 2505 2501 l 2401 2435 l 2524 2444 l cp
eoclip
n 2385 2430 m
 2655 2520 l gs col0 s gr gr

% arrowhead
n 2524 2444 m 2401 2435 l 2505 2501 l  col0 s
% Polyline
n 990 1890 m 1890 1890 l 1890 2205 l 990 2205 l
 cp gs col0 s gr 
% Polyline
gs  clippath
936 2278 m 988 2247 l 912 2117 l 947 2236 l 860 2147 l cp
eoclip
n 585 1620 m
 955 2250 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 39.00 108.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 860 2147 m 947 2236 l 912 2117 l  col0 s
% Polyline
n 2430 2385 m
 2835 2385 l gs col0 s gr 
% Polyline
n 1215 270 m 90 270 l
 90 2385 l gs col0 s gr 
% Polyline
n 2835 3285 m 2835 270 l
 1665 270 l gs col0 s gr 
% Polyline
n 945 1800 m 1935 1800 l 1935 1890 l 945 1890 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 63.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 945 2205 m 1935 2205 l 1935 2295 l 945 2295 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 63.00 147.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
952 1878 m 983 1827 l 854 1748 l 941 1836 l 822 1799 l cp
eoclip
n 585 1620 m
 955 1845 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 39.00 108.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 822 1799 m 941 1836 l 854 1748 l  col0 s
% Polyline
n 990 1485 m 1890 1485 l 1890 1800 l 990 1800 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1772 1646 m 1801 1698 l 1933 1624 l 1814 1657 l 1904 1572 l cp
eoclip
n 1800 1665 m
 2205 1440 l gs col0 s gr gr

% arrowhead
n 1904 1572 m 1814 1657 l 1933 1624 l  col0 s
% Polyline
gs  clippath
1772 2051 m 1801 2103 l 1933 2029 l 1814 2062 l 1904 1977 l cp
eoclip
n 1800 2070 m
 2205 1845 l gs col0 s gr gr

% arrowhead
n 1904 1977 m 1814 2062 l 1933 2029 l  col0 s
% Polyline
n 945 2520 m 1260 2430 l 1620 2430 l
 1935 2520 l gs col0 s gr 
% Polyline
n 1440 1485 m
 1440 945 l gs col0 s gr 
% Polyline
n 1440 3285 m
 1440 3015 l gs col0 s gr 
% Polyline
n 2835 3285 m
 1440 3285 l gs col0 s gr 
% Polyline
n 2835 945 m
 2385 945 l gs col0 s gr 
% Polyline
n 1935 945 m
 1440 945 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
630 2475 m
gs 1 -1 sc (N+) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
1440 2745 m
gs 1 -1 sc (P-Substrate) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
2070 2475 m
gs 1 -1 sc (N+) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
2655 2655 m
gs 1 -1 sc (source) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
2025 1395 m
gs 1 -1 sc (control gate) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
135 1575 m
gs 1 -1 sc (insulate layer) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
2025 1710 m
gs 1 -1 sc (floating gate) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
2025 1845 m
gs 1 -1 sc (\(empty\)) col0 sh gr
% Polyline
n 4125 1950 m
 4125 2040 l gs col0 s gr 
% Polyline
n 4170 1995 m
 4080 1995 l gs col0 s gr 
% Polyline
n 4260 2040 m
 4260 2130 l gs col0 s gr 
% Polyline
n 4305 2085 m
 4215 2085 l gs col0 s gr 
% Polyline
n 4755 1950 m
 4755 2040 l gs col0 s gr 
% Polyline
n 4800 1995 m
 4710 1995 l gs col0 s gr 
% Polyline
n 4440 1995 m
 4440 2085 l gs col0 s gr 
% Polyline
n 4485 2040 m
 4395 2040 l gs col0 s gr 
% Polyline
n 4665 2040 m
 4665 2130 l gs col0 s gr 
% Polyline
n 4710 2085 m
 4620 2085 l gs col0 s gr 
% Polyline
gs  clippath
3540 2370 m 3587 2332 l 3493 2214 l 3545 2327 l 3446 2252 l cp
eoclip
n 3555 2340 m
 3375 2115 l gs col0 s gr gr

% arrowhead
n 3446 2252 m 3545 2327 l 3493 2214 l  col0 s
/Times-Roman-iso ff 150.00 scf sf
3240 2070 m
gs 1 -1 sc (drain) col0 sh gr
% Polyline
n 5040 900 m
 5040 990 l gs col0 s gr 
% Polyline
n 5085 945 m
 4995 945 l gs col0 s gr 
% Ellipse
n 5175 945 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 5265 945 m
 5355 945 l gs col0 s gr 
% Polyline
n 4320 225 m
 4320 315 l gs col0 s gr 
% Polyline
n 4365 270 m
 4275 270 l gs col0 s gr 
% Ellipse
n 4455 270 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 4545 270 m
 4635 270 l gs col0 s gr 
% Polyline
n 3465 2565 m 3915 2565 l
 4095 2295 l gs col0 s gr 
% Polyline
n 5445 2565 m 4995 2565 l
 4815 2295 l gs col0 s gr 
% Polyline
n 3465 2295 m 5445 2295 l 5445 3015 l 3465 3015 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5395 2396 m 5376 2453 l 5520 2501 l 5416 2435 l 5539 2444 l cp
eoclip
n 5400 2430 m
 5670 2520 l gs col0 s gr gr

% arrowhead
n 5539 2444 m 5416 2435 l 5520 2501 l  col0 s
% Polyline
n 4005 1890 m 4905 1890 l 4905 2205 l 4005 2205 l
 cp gs col0 s gr 
% Polyline
n 3960 2205 m 4950 2205 l 4950 2295 l 3960 2295 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 264.00 147.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3465 2385 m
 3105 2385 l gs col0 s gr 
% Polyline
n 5445 2385 m
 5850 2385 l gs col0 s gr 
% Polyline
n 3960 1800 m 4950 1800 l 4950 1890 l 3960 1890 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 264.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
3968 1878 m 3999 1827 l 3870 1748 l 3957 1836 l 3838 1799 l cp
eoclip
n 3601 1620 m
 3971 1845 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 240.07 108.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3838 1799 m 3957 1836 l 3870 1748 l  col0 s
% Polyline
gs  clippath
3951 2278 m 4003 2247 l 3927 2117 l 3962 2236 l 3875 2147 l cp
eoclip
n 3600 1620 m
 3970 2250 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 240.00 108.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3875 2147 m 3962 2236 l 3927 2117 l  col0 s
% Polyline
n 4005 1485 m 4905 1485 l 4905 1800 l 4005 1800 l
 cp gs col0 s gr 
% Polyline
gs  clippath
4787 1646 m 4816 1698 l 4948 1624 l 4829 1657 l 4919 1572 l cp
eoclip
n 4815 1665 m
 5220 1440 l gs col0 s gr gr

% arrowhead
n 4919 1572 m 4829 1657 l 4948 1624 l  col0 s
% Polyline
gs  clippath
4790 2047 m 4811 2103 l 4953 2049 l 4831 2064 l 4932 1993 l cp
eoclip
n 4815 2070 m
 5175 1935 l gs col0 s gr gr

% arrowhead
n 4932 1993 m 4831 2064 l 4953 2049 l  col0 s
% Polyline
n 4455 1485 m
 4455 945 l gs col0 s gr 
% Polyline
n 4230 270 m 3105 270 l
 3105 2385 l gs col0 s gr 
% Polyline
n 4455 3285 m
 4455 3015 l gs col0 s gr 
% Polyline
n 5850 3285 m
 4455 3285 l gs col0 s gr 
% Polyline
n 5850 3285 m 5850 270 l
 4680 270 l gs col0 s gr 
% Polyline
n 4950 945 m
 4455 945 l gs col0 s gr 
% Polyline
n 5850 945 m
 5400 945 l gs col0 s gr 
% Polyline
n 4905 2430 m 4680 2385 l 4410 2385 l
 4230 2295 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
3645 2475 m
gs 1 -1 sc (N+) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4455 2745 m
gs 1 -1 sc (P-Substrate) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5085 2475 m
gs 1 -1 sc (N+) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5670 2655 m
gs 1 -1 sc (source) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5040 1395 m
gs 1 -1 sc (control gate) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
3150 1575 m
gs 1 -1 sc (insulate layer) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5175 675 m
gs 1 -1 sc (Vt\(R\)) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5220 1665 m
gs 1 -1 sc (floating gate) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
5220 1845 m
gs 1 -1 sc (\(w/ trapped electrons\)) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4455 3780 m
gs 1 -1 sc (\(b\)) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
1305 3780 m
gs 1 -1 sc (\(a\)) dup sw pop 2 div neg 0 rm  col0 sh gr
$F2psEnd
rs
end
