\section{Related work}
\label{sec:related}

There are two sorts of third-party developments that are related to the present
work: those related to software-based accounting of energy usage and those
which address the deployment of multi-objective optimization methods on
real-time systems for the control of energy consumption. This section gives an
overview of studied related work.

\subsection{Accounting of Battery Usage}

We investigated similar battery monitoring schemes in operating systems for
wireless sensor networks, including \tinyos~\cite{Polastre:2005},
\mantis~\cite{Bhatti:2005} and \contiki~\cite{Dunkels:2004}. All three systems
provide access to battery voltage measurements through an ADC interface.
\tinyos~and \contiki, however, have other work either from the original authors
or from third-parties that are related to the present work. None of them provide
complete voltage models by which it would be possible to infer battery
state-of-charge from voltage levels. Also, previous work have already discussed
the problems related to the frequency in which operating mode migration
happens~\cite{Hoeller:DIPES:2006}. These work already address questions
concerning time overhead and additional energy consumption during these
migrations~\cite{Seo:2011}.

Yang et al.~\cite{Yang:2007} built an extension to \tinyos~that enables
software-based accounting of energy consumption and battery lifetime estimation
for the \textsc{Mica2} sensor note. They monitor the time each hardware
component stays in an operating mode by intercepting mode changes and
accumulating drawn current during this period, decrementing it from the initial
informed battery charge. Their approach, however, requires modifications on
every monitored system component and may pose unnecessary overheads in
situations where devices change operating mode too often, as it would be the
case of a radio transceiver in a low-power listen mode, where the transceiver is
periodically switched on and off to check for incoming messages. Weissel and
Kellner~\cite{Weissel:2006} used an event-based energy accounting mechanism to
compute energy on the \textsc{BTnode} platform~\cite{Beutel:2004} running
\tinyos. They, however, didn't implement the presented concepts, limiting their
work to the analysis of the implementation possibilities.

Dunkels et al.~\cite{Dunkels:2007} implemented a time-based energy accounting
system for \contiki~running on \textsc{Tmote Sky}~\cite{Polastre:2005} platform.
Their model, as does the approaches used in \tinyos, demand for modification in
several different operating system modules (i.e., drivers), what may make the
system difficult to maintain. They also show that the lack of calibration with
real information in their system may be the cause of significant errors in
energy estimations.

\subsection{Optimization Methods in Energy-Aware Real-Time Systems}

Energy optimization for real-time systems has long been a subject of great
interest in the real-time community~\cite{A-survey-on-EART}. A plurality of
works have been published that apply optimization techniques over real-time and
system models to find good tradeoffs between energy consumption and operating
frequency/voltage of CPUs (DVS - Dynamic Voltage Scaling)~\cite{RT-DVSWorks},
on/off status of peripheral devices (DPM - Dynamic Power
Management)~\cite{RT-DPMWorks}, or both~\cite{RT-DVS-DPMWorks}. All these works,
although important to the design of energy-aware real-time systems, are outside
the scope of this paper for they are orthogonal to the work presented here.

Chantem et al.~\cite{Chantem:2009} proposed a generalized elastic scheduling
framework for real-time tasks based on Buttazzo's elastic
model~\cite{Buttazzo:1998} which may adapt task's elastic periods online based
on one specific (generic) performance metric. Optimal period adjustments are
then performed by a heuristic proposed by them. Although energy-related metrics
may be used as the objective performance metric, authors didn't explore this.
Eker et al.~\cite{Eker:2000} and Cervin et al.~\cite{Cervin:2002} show the
application of optimization theory to solve the period selection problem at
runtime by performing adaptive adjustments of periods based on a control
performance metric.
Bini and Natale~\cite{Bini:2005} devised an optimal search algorithm which
minimizes the task frequencies by performing incremental improvements on one
specific performance metric by using a branch and bound search over a predefined
feasibility region of the domain of task frequencies until the global optimum
is reached. The algorithm applies to fixed-priority scheduling schemes and may
be only applicable offline due to its high complexity.
% Multi-objective optimization have also been applied for solving multiprocessor
% scheduling problems such as the multiprocessor task
% assignment~\cite{Miryani:2009} and the task scheduling problem in heterogeneous
% systems~\cite{Chitra:2010}.

To the best of our knowledge, no work explored the effects of the period at
which battery state-of-charge information is made available for a real-time
energy-aware scheduler. Also, no work was found that applied multi-objective
optimization in real-time scheduling taking energy constraints into account.

% Also, although not focus of the present paper, no work have explored tasks'
% periods adaptation focusing energy consumption reduction.
