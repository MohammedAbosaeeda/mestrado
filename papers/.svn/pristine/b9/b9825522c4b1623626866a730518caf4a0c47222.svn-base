%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.6.0.324 (R2008a). Operating System: Linux 2.6.28-19-generic #66-Ubuntu SMP Sat Oct 16 17:39:04 UTC 2010 i686.
%%Title: /export/tiago/lisha_svn/papers/unpublished/2011-hw_aspects-tiago/fig/fig_lines_approximation.eps
%%CreationDate: 09/27/2011  14:17:02
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    81   255   529   537
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    81   255   529   537
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0972 6444 csm

    0     0  5381  3375 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5382 3376 rf
6 w
0 2992 4749 0 0 -2992 564 3058 4 MP
PP
-4749 0 0 2992 4749 0 0 -2992 564 3058 5 MP stroke
4 w
DO
SO
6 w
0 sg
 564 3058 mt 5313 3058 L
 564   66 mt 5313   66 L
 564 3058 mt  564   66 L
5313 3058 mt 5313   66 L
 564 3058 mt 5313 3058 L
 564 3058 mt  564   66 L
1219 3058 mt 1219 3010 L
1219   67 mt 1219  114 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1186 3203 mt 
(5) s
2037 3058 mt 2037 3010 L
2037   67 mt 2037  114 L
1971 3203 mt 
(10) s
2856 3058 mt 2856 3010 L
2856   67 mt 2856  114 L
2790 3203 mt 
(15) s
3675 3058 mt 3675 3010 L
3675   67 mt 3675  114 L
3609 3203 mt 
(20) s
4494 3058 mt 4494 3010 L
4494   67 mt 4494  114 L
4428 3203 mt 
(25) s
5313 3058 mt 5313 3010 L
5313   67 mt 5313  114 L
5247 3203 mt 
(30) s
 564 3058 mt  611 3058 L
5313 3058 mt 5265 3058 L
 463 3102 mt 
(0) s
 564 2630 mt  611 2630 L
5313 2630 mt 5265 2630 L
 263 2674 mt 
(2000) s
 564 2203 mt  611 2203 L
5313 2203 mt 5265 2203 L
 263 2247 mt 
(4000) s
 564 1776 mt  611 1776 L
5313 1776 mt 5265 1776 L
 263 1820 mt 
(6000) s
 564 1348 mt  611 1348 L
5313 1348 mt 5265 1348 L
 263 1392 mt 
(8000) s
 564  921 mt  611  921 L
5313  921 mt 5265  921 L
 196  965 mt 
(10000) s
 564  494 mt  611  494 L
5313  494 mt 5265  494 L
 196  538 mt 
(12000) s
 564   67 mt  611   67 L
5313   67 mt 5265   67 L
 196  111 mt 
(14000) s
 564 3058 mt 5313 3058 L
 564   66 mt 5313   66 L
 564 3058 mt  564   66 L
5313 3058 mt 5313   66 L
gs 564 67 4750 2992 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
164 -46 164 -46 164 -46 164 -47 163 -48 164 -48 164 -48 164 -49 
163 -50 164 -50 164 -51 164 -52 163 -52 164 -53 164 -54 164 -55 
163 -56 164 -57 164 -59 164 -59 163 -62 164 -63 164 -65 164 -68 
163 -70 164 -75 164 -80 164 -86 163 -100 564 2909 30 MP stroke
gr

c8
  36   36  564 2909 FO
  36   36  727 2809 FO
  36   36  891 2723 FO
  36   36 1055 2643 FO
  36   36 1219 2568 FO
  36   36 1382 2498 FO
  36   36 1546 2430 FO
  36   36 1710 2365 FO
  36   36 1874 2302 FO
  36   36 2037 2240 FO
  36   36 2201 2181 FO
  36   36 2365 2122 FO
  36   36 2529 2065 FO
  36   36 2692 2009 FO
  36   36 2856 1954 FO
  36   36 3020 1900 FO
  36   36 3184 1847 FO
  36   36 3347 1795 FO
  36   36 3511 1743 FO
  36   36 3675 1692 FO
  36   36 3839 1642 FO
  36   36 4002 1592 FO
  36   36 4166 1543 FO
  36   36 4330 1495 FO
  36   36 4494 1447 FO
  36   36 4657 1399 FO
  36   36 4821 1352 FO
  36   36 4985 1306 FO
  36   36 5149 1260 FO
  36   36 5313 1214 FO
gs 564 67 4750 2992 rc
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
164 -95 164 -94 164 -95 164 -95 163 -95 164 -95 164 -95 164 -95 
163 -94 164 -95 164 -95 164 -95 163 -95 164 -95 164 -95 164 -94 
163 -95 164 -95 164 -95 164 -95 163 -95 164 -95 164 -94 164 -95 
163 -95 164 -95 164 -95 164 -95 163 -95 564 2963 30 MP stroke
gr

c9
0 j
0 -58 -58 0 0 58 58 0 535 2934 5 MP
DP
0 -58 -58 0 0 58 58 0 698 2839 5 MP
DP
0 -58 -58 0 0 58 58 0 862 2744 5 MP
DP
0 -58 -58 0 0 58 58 0 1026 2649 5 MP
DP
0 -58 -58 0 0 58 58 0 1190 2554 5 MP
DP
0 -58 -58 0 0 58 58 0 1353 2459 5 MP
DP
0 -58 -58 0 0 58 58 0 1517 2364 5 MP
DP
0 -58 -58 0 0 58 58 0 1681 2270 5 MP
DP
0 -58 -58 0 0 58 58 0 1845 2175 5 MP
DP
0 -58 -58 0 0 58 58 0 2008 2080 5 MP
DP
0 -58 -58 0 0 58 58 0 2172 1985 5 MP
DP
0 -58 -58 0 0 58 58 0 2336 1890 5 MP
DP
0 -58 -58 0 0 58 58 0 2500 1795 5 MP
DP
0 -58 -58 0 0 58 58 0 2663 1700 5 MP
DP
0 -58 -58 0 0 58 58 0 2827 1606 5 MP
DP
0 -58 -58 0 0 58 58 0 2991 1511 5 MP
DP
0 -58 -58 0 0 58 58 0 3155 1416 5 MP
DP
0 -58 -58 0 0 58 58 0 3318 1321 5 MP
DP
0 -58 -58 0 0 58 58 0 3482 1226 5 MP
DP
0 -58 -58 0 0 58 58 0 3646 1131 5 MP
DP
0 -58 -58 0 0 58 58 0 3810 1036 5 MP
DP
0 -58 -58 0 0 58 58 0 3973 942 5 MP
DP
0 -58 -58 0 0 58 58 0 4137 847 5 MP
DP
0 -58 -58 0 0 58 58 0 4301 752 5 MP
DP
0 -58 -58 0 0 58 58 0 4465 657 5 MP
DP
0 -58 -58 0 0 58 58 0 4628 562 5 MP
DP
0 -58 -58 0 0 58 58 0 4792 467 5 MP
DP
0 -58 -58 0 0 58 58 0 4956 372 5 MP
DP
0 -58 -58 0 0 58 58 0 5120 278 5 MP
DP
0 -58 -58 0 0 58 58 0 5284 183 5 MP
DP
gs 564 67 4750 2992 rc
gr

0 sg
2313 3346 mt 
(Number of components) s
 114 1920 mt  -90 rotate
(Lines of code) s
90 rotate
 547 3101 mt 
( ) s
5297  109 mt 
( ) s
1140  261 mt 
(Scenario-adapted) s
gs 624 127 1486 335 rc
c8
397 0 703 218 2 MP stroke
gs 828 145 147 147 rc
  36   36  901  218 FO
gr

gr

c8
0 sg
1140  412 mt 
(Hand-coded) s
gs 624 127 1486 335 rc
c9
397 0 703 369 2 MP stroke
gs 828 296 147 147 rc
0 -58 -58 0 0 58 58 0 872 340 5 MP
DP
gr

gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
