\section{The Proposed Scheduling Strategy}
\label{sc:proposta:proposta}

%- Deixar claro: caso seja constatado a falta de energia para atender o tempo de duração do sistema, a proposta é não executar as partes opcionais, somente as partes obrigatórias. No momento em que a energia torna-se suficiente, as partes opcionais voltam a ser executadas no devido tempo. Explicar a figura~\ref{fig:energiaTempo}.

%O nosso escalonador baseado no algoritmo \textsc{EDF} garante a execução das partes obrigatórias com os seus respectivos \deadlines{} atendidos sem levar em consideração o nível de energia do sistema. A execução das partes opcionais, entretanto, não é garantida. Nesta proposta, as partes opcionais são executadas somente se os \deadlines{} das partes obrigatórias e o tempo de duração da bateria desejado são sustentados. A figura~\ref{fig:energiaTempo} representa as tarefas que atendem ao parâmetro de energia (tempo de duração do sistema) e as tarefas que atendem ao parâmetro do tempo (\deadline{} das partes obrigatórias). A intersecção dessas representações indica as tarefas que podem ser executadas e que serão atendidas em relação aos dois parâmetros desejados (energia e tempo). As tarefas fora dessa intersecção não são escalonáveis neste algoritmo. 

Our scheduler, based on \textsc{EDF}, guarantees the execution of mandatory 
subtasks with their deadlines respectively met, independently of 
%the without taking into account 
the system energy level. However, the optional subtasks execution is not
guaranteed. The optional subtasks are executed only if the
mandatory subtasks deadlines and the system's batteries lifetime desired by
application are met. Figure~\ref{fig:energiaTempo} presents the tasks that meet
the energy parameter, i.e., system's batteries lifetime and the tasks that meet
the time parameter, i.e., the mandatory subtasks deadlines. Intersection of
these representations indicates the tasks that can be executed and that will be
met in relation to two parameters desired, i.e., time and energy. Tasks outside
that intersection are not schedulable in this algorithm.


\begin{figure}[!ht]
\centering
     {\includegraphics[scale=0.5]{figuras/energy.eps}}
     \caption{Intersection between time and energy.}
%     \caption{Intersecção entre a energia e o tempo.}
     \label{fig:energiaTempo}
\end{figure}


%- Objetivo não é apenas economizar energia, mas otimizar a funcionalidade do sistema. Executar partes opcionais... 

%O objetivo deste escalonador não é apenas economizar a energia consumida no sistema, pois, caso contrário, a técnica seria simplesmente nunca executar as partes opcionais. A partir disso, o objetivo é atender o tempo especificado pela aplicação com a execução dentro dos \deadlines{} das partes obrigatórias e com a execução do máximo possível das partes opcionais, ou seja, otimizar a funcionalidade do sistema. 

The objective of this scheduler is not only save the energy consumed in the
system --- otherwise, the technique would simply never execute the optional
subtasks --- but to meet the battery lifetime specified by
the application and to meet the mandatory subtasks deadlines with the execution 
of the maximum possible of the optional subtasks, thus optimizing the
application functionality.


%- Formalizar o algoritmo de escalonamento. (diagrama de sequencia seria interessante)

%O algoritmo do escalonador proposto neste trabalho é apresentado na figura~\ref{fig:algoritmo}. Neste algoritmo, $\pi$ é o intervalo entre medições da carga da bateria que pode ser especificado pelo programador da aplicação e que deve levar em consideração que cada medição também consome energia para ser realizada. Esse intervalo depende do estado de energia da bateria constatado na última medição. Caso a última medição constate que existe energia suficiente e que ultrapasse um determinado \thr{}, o valor do intervalo será maior, pois o sistema não necessita que sejam realizadas medições freqüentes. Entretanto, caso a última medição constate que a energia existente não é suficiente para atender o tempo de duração especificado, as medições devem ser mais freqüentes, pois tarefas opcionais estão sendo descartadas.


Figure ~\ref{fig:algoritmo} presents proposed scheduler algorithm. 
In proposed scheduler, the subtasks are treated as tasks in terms of scheduling.
$\pi$ is the interval among battery charge measurements
that can be specified by the application programmer and must take into consideration
that each measurement consumes energy to be performed. This interval depends on
the battery power state found in the last measurement. If the last measurement
finds that there is sufficient energy and that exceed a certain threshold, the
interval will be greater, because the system does not need to be made frequent
measurements. However, the measurements must be more frequent if the last 
measurement finds that energy is not enough to meet battery lifetime specified 
because optional subtasks are being discarded. 


%\begin{center}  
%$D$ = $\left [ \frac{n-1}{n+1}N\sqrt{2} \right]$
%\end{center}

\begin {scriptsize}
\begin {center}
 \rule[0.1ex]{35em}{0.2ex}
\end {center}

%\noindent 1: {\textbf{A cada tarefa que entra no estado de \textit{Pronto}:}}\\
\noindent 1: {\textbf{For} every task that enters in \textit{READY} state:}\\
%2:\indent calcula o novo \deadline{} absoluto de acordo com o tempo decorrido\\
2:\indent Determine the new absolute deadline in accordance with the elapsed time\\
%3:\indent calcula a prioridade baseada no \deadline{} absoluto \\
3:\indent Determine the priority based on absolute deadline \\
%4:\indent adiciona na fila de acordo com a prioridade calculada\\
4:\indent Add to the queue according to calculated priority\\
5:\\
%\noindent 6: {\textbf{A cada $\pi$ unidades de tempo:}}
\noindent 6: {\textbf{For} each $\pi$ time units:}
%\hfill{/* $\pi$ especificado pelo programador e depende do estado de energia */}\\
\hfill{/* $\pi$ specified by the programmer and it depends on the energy state */}\\
%7:\indent afere a bateria\\
7:\indent Measure the battery\\
%8:\indent verifica se existe energia suficiente para atender o tempo desejado pela aplicação\\
8:\indent Check if there is enough energy to meet the time required by application\\
9:\\
%\noindent 10: {\textbf{A cada reescalonamento:}}\\
\noindent 10: {\textbf{For} each rescheduling:}\\
%11:\indent seleciona na fila a tarefa com estado \textit{Pronto} de mais alta prioridade \\
11:\indent Select the highest priority task in \textit{READY} state \\
%12:\indent \textbf{SE}, tarefa é \emph{hard} de tempo real,\\
12:\indent \textbf{if}, task is hard real-time, \textbf{then}\\
%13:\indent \hspace{2em} executa a tarefa selecionada\\
13:\indent \hspace{2em} Execute the selected task\\
%14:\indent \textbf{SENAO}, 
14:\indent \textbf{else}, 
%\hfill{/* tarefa é melhor esforço */}\\
\hfill{/* task is ``best effort'' */}\\
%15:\indent \hspace{2em} \textbf{SE}, existe energia suficiente para atender o tempo de duração requerido,\\
15:\indent \hspace{2em} \textbf{if}, there is enough energy to meet the system lifetime required, \textbf{then}\\
%16:\indent \hspace{4em} executa a tarefa selecionada\\
16:\indent \hspace{4em} Execute the selected task\\
%17:\indent \hspace{2em} \textbf{SENAO}, 
17:\indent \hspace{2em} \textbf{else}, 
%\hfill{/* bateria não possui energia suficiente */}\\
\hfill{/* Battery does not have sufficient energy */}\\
%18:\indent \hspace{4em} executa a gerência de energia\\
18:\indent \hspace{4em} Use power management techniques\\
19:\\

\begin {center}
 \rule[0.1ex]{35em}{0.2ex}
\end {center}

\begin {figure}[!h] 
\centering 
%\caption {Algoritmo do escalonador proposto.}
\caption {Proposed scheduler algorithm.}
\label {fig:algoritmo}
\end {figure}
\end {scriptsize}

%\input{figuras/algoritmo.tex}

%- A formalização matemática do escalonador pode ser observada com relação ao tempo e à energia, respectivamente, na figura~\ref{fig:formalizacaoTempo} e na figura~\ref{fig:formalizacaoEnergia}.

%Nós apresentamos algumas equações que verificam em tempo de projeto e em tempo de execução se as tarefas são escalonáveis no nosso algoritmo. As equações em tempo de projeto são descritas com maiores detalhes na seção~\ref{sc:proposta:proposta:projeto}. A seção~\ref{sc:proposta:proposta:execucao} apresenta as equações em tempo de execução.

% Comentário Lucas: novamente os sub-indices!

We present some equations that verify at project-time and at execution-time if
the tasks are schedulable in our algorithm.
Section~\ref{sc:proposta:proposta:projeto} describes the equations at 
project-time with more detail. Section~\ref{sc:proposta:proposta:execucao} 
presents the the equations at execution-time.


\subsection{Equations at Project-Time}
\label{sc:proposta:proposta:projeto}

%Como o escalonador proposto é baseado no algoritmo \textsc{EDF}, é possível seguir a mesma lógica para o cálculo da escalonabilidade das tarefas em tempo de projeto com algumas adaptações. Supondo que o sistema de tempo real considerado possua $n$ tarefas periódicas e independentes, {\Large $\tau$} = $\{\tau_0,\tau_1,...,\tau_{n-1}\}$, sendo $\forall\tau_i$, $D_i=P_i$ . No modelo da computação imprecisa, cada $\tau_i$ é dividida em parte obrigatória e parte opcional com tempos de execuções nos piores casos, respectivamente, de $\mu_i$ e $\theta_i$. Com isso, o tempo total de execução de $\tau_i$ no  pior caso é $C_i = \mu_i + \theta_i$ . 

The proposed scheduler is based on the \textsc{EDF} algorithm, thus it is
possible to follow the same logic to calculate the tasks schedulability at
project-time with a few adjustments. Suppose that the real-time system
considered has $n$ periodic and independent tasks, {\Large $\tau$} =
$\{\tau_0,\tau_1,...,\tau_{n-1}\}$, where $\forall\tau_i$, $D_i=P_i$ . In the
imprecise computation model, each $\tau_i$ is divided into mandatory and
optional subtasks with execution times in the worst cases of $\mu_i$ and
$\theta_i$, respectively. Therefore, the total execution time of $\tau_i$, in
the worst case, is $C_i = \mu_i + \theta_i$ .


%Para atender o nosso objetivo em relação aos \deadlines{} das partes obrigatórias, a equação (\ref{eq:escalonador:m}) deve ser respeitada

In order to guarantee that no mandatory subtasks deadlines will be lost, 
equation (\ref{eq:escalonador:m}) must be respected

\begin{equation}
\sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma \le \omega
\label{eq:escalonador:m}
\end{equation}

%\[ \sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma \le \omega \]

%onde $\omega = 1$ para um sistema com mono-processador, e $\sigma$ representa o pior caso de interferências, que inclui: tempo gasto no sistema operacional, nas trocas de contexto, no próprio algoritmo de escalonamento, entre outros. A equação (\ref{eq:escalonador:m}) deve ser atendida para as tarefas serem escalonáveis em relação aos \deadlines{} das partes obrigatórias, caso contrário ($\sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma > \omega$), o processador estará sobrecarregado. 

\noindent where $\omega = 1$ for a system with a single-processor and $\sigma$
represents the interference in the worst cases, which includes: time spent in
the operating system, context switch, scheduler algorithm.
Equation (\ref{eq:escalonador:m}) must be met in order for the tasks to be
schedulable in relation to mandatory subtasks deadlines, otherwise
($\sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma > \omega$), the
processor is overloaded.


%Com a inclusão do tempo de execução da parte opcional na equação (\ref{eq:escalonador:m}), podemos determinar se as tarefas, como um todo, serão executadas (parte obrigatória e parte opcional). Entretanto, é importante observar que isso não é um requisito fundamental no nosso algoritmo e será relevante, apenas, quando a equação (\ref{eq:escalonador:m}) é válida, caso contrário, as tarefas já não seriam escalonáveis. 

With the inclusion of the optional subtask execution time in equation
(\ref{eq:escalonador:m}), we can determine if the tasks as a whole will be
executed, mandatory and optional subtasks. However, it is important to note that
equation (\ref{eq:escalonador:mo}) is not a obligatory requirement in our 
algorithm and only will be relevant when
equation (\ref{eq:escalonador:m}) is true, otherwise, the tasks are not
schedulable.


\begin{equation}
\sum_{i=1}^n \left (\frac{\mu_i + \theta_i}{D_i} \right) + \sigma \le \omega
\label{eq:escalonador:mo}
\end{equation}


%\[ \sum_{i=1}^n \left (\frac{\mu_i + \theta_i}{D_i} \right) + \sigma \le \omega \]

%Quando a equação (\ref{eq:escalonador:mo}) for respeitada, as tarefas são 100\% escalonáveis (parte obrigatória e parte opcional) em relação aos seus \deadlines{}. Caso contrário, uma certa fração $\chi$ das partes opcionais é descartada. A equação (\ref{eq:escalonador:x}) apresenta como encontrar a fração $\chi$. 

Mandatory and optional subtasks are schedulable in relation to
their deadlines when equation (\ref{eq:escalonador:mo}) is respected.
Otherwise, a certain fraction $\chi$ of optional subtasks is discarded. Equation
(\ref{eq:escalonador:x}) presents how to find the fraction $\chi$.


\begin{equation}
\chi = \frac{\sum_{i=1}^n \left (\frac{\mu_i + \theta_i}{D_i} \right)
+ \sigma - \omega}{\sum_{i=1}^n \left (\frac{\theta_i}{D_i}
\right)}
\label{eq:escalonador:x}
\end{equation}

%\[ \chi = \frac{\sum_{i=1}^n \left (\frac{\mu_i + \theta_i}{D_i} \right)
%+ \sigma - \omega}{\sum_{i=1}^n \left (\frac{\theta_i}{D_i}
%\right)} \] 

%\[ \chi = \frac{\left (\sum_{i=1}^n \left (\frac{\mu_i + \theta_i}{D_i} \right)
%+ \sigma - \omega \right ) \times 100}{\sum_{i=1}^n \left (\frac{\theta_i}{D_i}
%\right)} \] 

%O objetivo em relação à energia pode ser alcançado seguindo o mesmo tipo de raciocínio lógico que foi realizado até o presente momento, mas tendo em vista a taxa do consumo de energia das tarefas. O consumo de energia de $\tau_i$ no pior caso, $E_i$, é dado pela soma dos consumos de energia da parte obrigatória e da parte opcional nos piores casos, respectivamente, $E_{\mu i}$ e $E_{\theta i}$ , ($E_i = E_{\mu i} + E_{\theta i}$). O número máximo possível de execuções, $\eta_i$, de $\tau_i$ no tempo requerido pela aplicação, $T_t$, é dado pela divisão entre o tempo requerido e o intervalo de execução de $\tau_i$, ou seja, $\eta_i = \frac{T_t}{D_i}$ .

The energy-related objective can be achieved by following the same kind
of logic presented thus far, but taking into account the tasks' energy
consumption rate. The $\tau_i$ energy consumption in the wort case, $E_i$, is
given by the sum of the energy consumption in the mandatory and optional
subtasks worst cases times $E_{\mu i}$ e $E_{\theta i}$, respectively, ($E_i =
E_{\mu i} + E_{\theta i}$). We suppose that, as worst cases times, the worst
cases energy consumptions are previously known by the application developer.
These values can be obtained by energy profiling or another techniques. 
The maximum number of possible executions $\eta_i$ of $\tau_i$ in the time
required by application $T_t$ is given by division between the time required and
the execution interval of $\tau_i$, i.e., $\eta_i = \frac{T_t}{P_i}$ . $T_t$ is
given by the application developer based on the battery' capacity.


%Com o intuito de atender, no mínimo, as partes obrigatórias das tarefas, temos a equação (\ref{eq:escalonador:en}) que indica se o conjunto das tarefas será escalonável em relação à energia. 

In order to meet at least the mandatory parts of the tasks, we have equation
(\ref{eq:escalonador:en}) which indicates if the set of tasks will be
schedulable with respect to energy.

\begin{equation}
\sum_{i=1}^n \left (\frac{E_{\mu i} \times \eta_i}{E_t} \right) + \epsilon \le 1
\label{eq:escalonador:en}
\end{equation}


%\[ \sum_{i=1}^n \left (\frac{E_{\mu i} \times \eta_i}{E_t} \right) + \epsilon \le
%1 \]

%Onde $E_t$ é a energia total do sistema (especificação da bateria), ou seja, a capacidade da bateria, $\epsilon$ representa o pior caso do consumo de energia de diferentes fatores, como, a energia consumida pelo sistema operacional, pelas trocas de contexto, pelo próprio algoritmo de escalonamento, entre outros. A capacidade do sistema em relação à energia é definida como 1, ou seja, 100\%. Substituindo $\eta_i$ de $\tau_i$ na equação (\ref{eq:escalonador:en}) temos a equação (\ref{eq:escalonador:e}). 

\noindent where $E_t$ is the total energy of the system (battery specification), i.e.,
battery' capacity, $\epsilon$ represents energy consumption in the worst case of
different factors such as the energy consumed by the operating system, the
context switch, the scheduler algorithm itself. The battery's capacity is set to
1, i.e., 100 \%. Substituting $\eta_i$ $\tau_i$ in the equation
(\ref{eq:escalonador:en}) we have equation (\ref{eq:escalonador:e}).


%$\varrho = 1$

\begin{equation}
\sum_{i=1}^n \left (\frac{E_{\mu i} \times T_t}{P_i \times E_t} \right) + \epsilon \le 1
\label{eq:escalonador:e}
\end{equation}


%\[ \sum_{i=1}^n \left (\frac{E_{\mu i} \times T_t}{D_i \times E_t} \right) + \epsilon \le
%1 \]

%As tarefas são escalonáveis em relação à energia no nosso algoritmo se a equação (\ref{eq:escalonador:e}) for atendida. Caso contrário ($\sum_{i=1}^n \left (\frac{E_{\mu i} \times T_t}{D_i \times E_t} \right) + \epsilon > 1$), o sistema não atenderá ao tempo de duração requerido pela aplicação para esse conjunto de tarefas.

The tasks are schedulable in relation to energy in our algorithm if equation
(\ref{eq:escalonador:e}) is respected. Otherwise ($\sum_{i=1}^n \left
(\frac{E_{\mu i} \times T_t}{P_i \times E_t} \right) + \epsilon > 1$), the
system will not meet the battery lifetime required by application for this set
of tasks.

%A inclusão da energia consumida pelas partes opcionais no pior caso na equação (\ref{eq:escalonador:e}) possibilita que verifiquemos se as tarefas, como um todo (parte obrigatória e parte opcional), são executadas. Como já explicado anteriormente, isso não é um requisito obrigatório e a equação (\ref{eq:escalonador:eo}) só deve ser calculada se a equação (\ref{eq:escalonador:e}) é respeitada (partes obrigatórias atendidas).

The inclusion of the energy consumed by optional subtasks in
equation (\ref{eq:escalonador:e}) allows us to check if the tasks as a whole
will be executed, mandatory and optional subtasks. As discussed previously, this
is not an obligatory requirement and equation (\ref{eq:escalonador:eo}) only
should be calculated if the equation (\ref{eq:escalonador:e}) is respected,
i.e., mandatory subtasks met.


\begin{equation}
\sum_{i=1}^n \left (\frac{\left (E_{\mu i} + E_{\theta i} \right ) \times T_t}{P_i
\times E_t} \right) + \epsilon \le 1
\label{eq:escalonador:eo}
\end{equation}


%\[ \sum_{i=1}^n \left (\frac{\left (E_{\mu i} + E_{\theta i} \right ) \times T_t}{D_i
%\times E_t} \right) + \epsilon \le 1 \]

%Caso a equação (\ref{eq:escalonador:eo}) seja respeitada, todas as partes obrigatórias e opcionais das tarefas são executadas em relação à energia do sistema. Caso contrário, uma determinada fração $\gamma$ das partes opcionais não será executada, pois o sistema não atenderia ao tempo de duração desejado pela aplicação. A equação (\ref{eq:escalonador:y}) fornece a fração de partes opcionais descartadas em relação à energia.

All mandatory and optional parts of the tasks are executed in relation to system
energy if equation (\ref{eq:escalonador:eo}) is respected. Otherwise, a
certain fraction $\gamma$ of optional subtasks will not be executed because the
system would not meet the battery lifetime specified by the application. Equation
(\ref{eq:escalonador:y}) provides a fraction $\gamma$ of optional subtasks
discarded in relation to energy.

\begin{equation}
\gamma = \frac{\sum_{i=1}^n \left (\frac{ \left (E_{\mu i} + E_{\theta i} \right ) \times T_t}{P_i \times E_t} \right) + \epsilon - 1 }{\sum_{i=1}^n \left (\frac{E_{\theta i} \times T_t}{P_i \times E_t} \right)}
\label{eq:escalonador:y}
\end{equation}


%\[ \gamma = \frac{\sum_{i=1}^n \left (\frac{ \left (E_{\mu i} + E_{\theta i} \right ) \times T_t}{D_i \times E_t} \right) + \epsilon - 1 }{\sum_{i=1}^n \left (\frac{E_{\theta i} \times T_t}{D_i \times E_t} \right)} \] 

%\[ \gamma = \frac{\left (\sum_{i=1}^n \left (\frac{ \left (E_{\mu i} + E_{\theta i} \right ) \times T_t}{D_i \times E_t} \right) + \epsilon - 1 \right ) \times 100}{\sum_{i=1}^n \left (\frac{E_{\theta i} \times T_t}{D_i \times E_t} \right)} \] 

%Neste algoritmo, o objetivo é atender os dois parâmetros em relação ao tempo e à energia, respectivamente, os \deadlines{} das partes obrigatórias e o tempo de duração da bateria especificado pela aplicação. Com isso, (\ref{eq:escalonador:te}) é a equação completa do nosso escalonador que deve ser verdadeira para as tarefas serem escalonáveis.

In this algorithm, the objective is to meet the two parameters in relation
to time and energy, i.e., the mandatory subtasks deadlines and battery lifetime
specified by the application, respectively. Thus, (\ref{eq:escalonador:te}) is the
full equation of our scheduler that must be true in order to tasks will be
schedulable.


\begin{equation}
\left [ \sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma \le \omega
\right ]  \wedge  \left [ \sum_{i=1}^n \left (\frac{E_{\mu i} \times T_t}{P_i \times E_t}
\right) + \epsilon \le 1 \right ]
\label{eq:escalonador:te}
\end{equation}


%\[ \left [ \sum_{i=1}^n \left (\frac{\mu_i}{D_i} \right) + \sigma \le \omega
%\right ]  \wedge  \left [ \sum_{i=1}^n \left (\frac{E_{\mu i} \times T_t}{D_i \times E_t}
%\right) + \epsilon \le 1 \right ] \]

%Caso a equação (\ref{eq:escalonador:te}) seja respeitada, as partes obrigatórias das tarefas tem as execuções garantidas no nosso escalonador em relação aos dois parâmetros desejados neste trabalho. A fração máxima $\lambda$ possível de tarefas opcionais perdidas em relação aos dois parâmetros pode ser obtida através da equação (\ref{eq:escalonador:l}).

The mandatory subtasks have their executions guaranteed in our scheduler in
relation to time and energy if equation (\ref{eq:escalonador:te}) is
respected. The maximum fraction $\lambda$ possible of optional subtasks lost in
relation to time and energy can be obtained by the equation
(\ref{eq:escalonador:l}).


\begin{equation}
\lambda = \max \left ( \chi , \gamma  \right)
\label{eq:escalonador:l}
\end{equation}


%\[ \lambda = \max \left ( \chi , \gamma  \right)\]

%Cada $\tau_i$ nesta abordagem com os dois parâmetros (tempo e energia) é caracterizado neste modelo por oito parâmetros, $(P_i, D_i, C_i, \mu_i, \theta_i, E_i, E_{\mu i}, E_{\theta i})$, mencionados anteriormente. 


Each $\tau_i$ in this approach with two parameters, time and energy, is
characterized by eight parameters $(P_i, D_i, C_i, \mu_i, \theta_i, E_i, E_{\mu
i}, E_{\theta i})$ mentioned earlier.



%\input{figuras/tempo.tex}
%\input{figuras/energia.tex}


%\subsection{Estimativa do Tempo de Duração do Sistema}
%\label{sc:proposta:estimativa}

\subsection{Equation at Execution-Time}
\label{sc:proposta:proposta:execucao}

%- Proposta para a estimativa do tempo restante de duração da bateria. Utilizo uma técnica para estimar o tempo restante da bateria. Estimativa do tempo restante na figura~\ref{fig:energiaTempoRestante}.

%Com objetivo de prover \qos{} em termos de energia e aproveitar melhor os recursos com a utilização das partes opcionais é necessário verificar periodicamente, em tempo de execução, se o tempo de duração do sistema requerido pela aplicação, $T_{t \kappa}$, no instante $\kappa$ pode ser alcançado. Para isso, $T_{t \kappa}$ é recalculado no instante $\kappa$ de acordo com o tempo decorrido. A energia total do sistema (carga da bateria), $E_{t \kappa}$, também, deve ser  recalculada no instante $\kappa$ . As plataformas dos sistemas embarcados, normalmente, provêm mecanismos para obter a carga da bateria. Os novos valores podem realimentar a equação (\ref{eq:escalonador:ek}) com o intuito de verificar se $T_{t \kappa}$ pode ser atendido. 


In order to provide \qos{} in terms of energy and make better use the resources
with the optional subtasks execution it is necessary periodically to check at
execution-time if the battery lifetime specified by the application $T_{t \kappa}$
in the instant $\kappa$ can be achieved. Therefore, $T_{t \kappa}$ is
recalculated in the instant $\kappa$ according to the elapsed time. The total
energy of the system (battery charge) $E_{t \kappa}$ also must be recalculated
in the instant $\kappa$. The embedded systems platforms usually provide
mechanisms to get the battery charge. Equation (\ref{eq:escalonador:ek}) can
be recalculated with the new values in order to check if $T_{t \kappa}$ can be
met in the instant $\kappa$.


\begin{equation}
\sum_{i=1}^n \left (\frac{E_{\mu i} \times T_{t \kappa}}{P_i \times E_{t \kappa}}
\right) + \epsilon \le 1
\label{eq:escalonador:ek}
\end{equation}


%\[ \sum_{i=1}^n \left (\frac{E_{\mu i} \times T_{t \kappa}}{D_i \times E_{t \kappa}}
%\right) + \epsilon \le 1 \]

%Caso a equação (\ref{eq:escalonador:ek}) seja atendida, todas as partes das tarefas são executadas (partes obrigatórias e partes opcionais), pois essa equação indica que existe energia suficiente para atender $T_{t \kappa}$. Caso contrário, as partes opcionais serão descartadas. O escalonador chama um gerente do consumo de energia no tempo em que as partes opcionais estariam em execução, aproveitando o tempo ocioso do sistema para economizar energia. Quando for constatado que a equação (\ref{eq:escalonador:ek}) volta a ser verdadeira, as partes opcionais das tarefas voltam a ser executadas.


All mandatory and optional parts of the tasks are executed in relation to energy
if the equation (\ref{eq:escalonador:ek}) is respected because this equation
indicates there is sufficient energy to meet $T_{t \kappa}$. Otherwise, some
optional subtasks will be discarded. The scheduler calls a power manager in
the time that the optional subtasks would be in execution. Thus, it takes the
idle time of the system in order to save energy. The optional subtasks return to
be executed when it is observed that the equation (\ref{eq:escalonador:ek}) 
returns to be true.













%Um monitor lê a carga da bateria
%periodicamente e estima o tempo de duração da bateria considerando que a
%velocidade de descarga é constante. Apesar desta técnica apresentar uma baixa
%precisão, uma vez que a velocidade de descarga não é constante em todos os
%casos, ela é uma solução com um baixo \ov{} para a aplicação. 
%A figura~\ref{fig:formalizacaoEstimativaEnergia} apresenta a formalização 
%matemática da estimativa de energia para o teste em tempo de execução.



%\input{figuras/estimativa.tex}

%Será que precisa a figura~\ref{fig:energiaTempoRestante}.

%\begin{figure}[!ht]
%\centering
%     {\includegraphics[scale=0.5]{figuras/energiaTempoRestante.eps}}
%     \caption{Tempo restante}
%     \label{fig:energiaTempoRestante}
%\end{figure}
