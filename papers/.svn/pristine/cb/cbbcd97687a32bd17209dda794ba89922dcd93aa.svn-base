\section{A plataforma livre \protect\epos} 

O \epos~(Embedded Parallel Operating System)~\cite{Marcondes:2006} é um arcabouço baseado em componentes para a geração de ambientes dedicados de suporte de tempo de execução. O arcabouço do \epos~permite que programadores desenvolvam aplicações independentes de plataforma, e ferramentas de análise permitem que componentes sejam adaptados automaticamente para atender a requisitos destas aplicações particulares. Por definição, uma instância do sistema agrega todo suporte necessário para a sua aplicação dedicada, e nada mais.

O projeto modular do \epos~foi guiado pela metodologia Projeto de Sistemas Embarcados Guiado pela Aplicação (ADESD - Application-Driven Embedded System Design)~\cite{Froehlich:2001}. A ADESD baseia-se nas conhecidas estratégias de decomposição de domínio por trás do Projeto Baseado em Famílias (FBD - Family-Based Design) e Orientação a Objetos (OO) como, por exemplo, análise de atributos comuns e variabilidade, para adicionar o conceito de identificação e separação de aspectos ainda nos estágios iniciais do projeto. Deste modo, a ADESD guia a engenharia de domínio para famílias de componentes, das quais dependências de cenários de execução são fatoradas na forma de aspectos e relacionamentos externos são capturados em um arcabouço de componentes. Esta estratégia de engenharia de domínio trata consistentemente algumas das questões mais relevantes do desenvolvimento de software baseado em componentes: reuso, gerenciamento da complexidade e composição.

Aplicações de redes de sensores sem-fio apresentam requisitos específicos que vão além dos atendidos pelos serviços tradicionais de sistemas operacionais. Estes incluem gerenciamento de energia eficiente, reprogramação em campo, abstração uniforme de sensores e serviços de comunicação configuráveis. O \epos~foi estendido de modo a atender estes requisitos extras~\cite{Wanner:2008}.

O \epos~provê serviços de gerência de energia dirigida pela aplicação que permite um consumo consciente de energia em sistemas profundamente embarcados sem comprometer a portabilidade da aplicação e sem gerar sobrecustos excessivos. O objetivo do subsistema de gerenciamento de energia do \epos~é permitir que aplicações expressem quando determinados componentes de software não estão sendo utilizados, permitindo que o sistema migre dispositivos (hardware) associados a estes componentes de software para modos de operação que consumam menos energia. Disto emergiram várias questões que dizem respeito a diferenças arquiteturais entre dispositivos distintos e ao acesso concorrente aos recursos de hardware por diferentes componentes de software. Para tratar destas questões, foram concebidas (1) uma interface genérica para gerenciamento de energia, (2) um mecanismo de propagação de mensagens e (3) um modelo de formalização das trocas entre modos de operação~\cite{Froehlich:2011}.

A infraestrutura de comunicação do \epos~para redes de sensores sem-fio é implementada pelo protocolo C-MAC (Configurable MAC) que provê suporte a comunicação de baixo nível~\cite{Steiner:2010}, protocolos de roteamento como o ADHOP (???)~\cite{Okazaki:2011}, e uma pilha leve TCP/IP.

\subsection{\protect\emote}

O projeto \emote~tem por objetivo desenvolver uma família de módulos de sensoriamento que permita ampla configurabilidade tanto da plataforma quanto do ambiente de software (sistema operacional). O \emote, apresentado na Figura 4, foi concebido com um projeto modular, sendo previstos três módulos, entre os quais foram estabelecidas interfaces padrão, permitindo o uso intercambiável de diferentes versões dos módulos. A Figura 5 apresenta os três tipos de módulos, que são os seguintes:

\begin{itemize}
	\item \textbf{Módulo de Base:} o módulo base incorpora as funcionalidades de processamento e de comunicação. O projeto \emote~desenvolveu duas versões deste módulo, uma utilizando o single-package ZigBitTM e outra utilizando o SoC (single-die) MC13224V, da Freescale. Características específicas de cada versão do módulo base são apresentadas abaixo. Este módulo deve implementar detalhes de do su- porte a estes dispositivos, como a regulação de tensão e o dimensionamento da antena, além rotear os pinos dos dispositivos de modo a manter o padrão das interfaces de alimentação e de entrada e saída.

	\item \textbf{Módulo de Entrada e Saída:} no módulo de entrada e saída devem ser implementadas as interfaces necessárias de entrada e saída, podendo um novo módulo destes ser desenvolvido para cada aplicação que se pretende desenvolver, permitindo o emprego dos sensores ou atuadores desejados para uma aplicação específica. O projeto \emote~desenvolveu um módulo de entrada e saída ao qual deu o nome de start-up board. Esta placa incorpora uma interface USB, sensor de temperatura, acelerômetro de 3 eixos, alguns LEDs e botões~\cite{LISHA:Projetos:EMOTE}.

	\item \textbf{Módulo de Alimentação:} de modo a permitir o emprego de diferentes fontes de alimentação, uma interface de alimentação foi implementada. Módulos que se conectam a esta interface podem ser tão simples como uma bateria alcalina AA, ou tão complexas quanto um sistema com bateria de lítio recarregável ou com painéis solares. A interface de alimentação ainda disponibiliza uma interface I2C, permitindo que o módulo de alimentação se comunique com o de processamento. O projeto \emote~ainda não desenvolveu nenhum módulo de alimentação específico, mas trabalhos em andamento estão explorando tecnologias de captação de energia utilizando esta interface.

\end{itemize}

\fig{emote2-block_diagram.png}{\protect\emote~block diagram}{width=\columnwidth}

As interfaces padrão definidas pelo projeto \emote~para interconexão dos módulos desenvolvidos são as seguintes:
\begin{itemize}
	\item \textbf{Interface de Entrada e Saída:} 32 pinos, sendo 2 para alimentação e outros 30 que podem ser utilizados ou como GPIO, ou com funções especificas que inclui ADC, UART e SPI.
	\item \textbf{Interface de Alimentação:} disponibiliza pinos aos quais devem ser conectados o terra e alimentação do modulo de alimentação. O modulo de processamento devolve ao modulo de alimentação o sinal com tensão regulada. Também existem os 2 pinos empregados na comunicação $I^2C$.
\end{itemize}
