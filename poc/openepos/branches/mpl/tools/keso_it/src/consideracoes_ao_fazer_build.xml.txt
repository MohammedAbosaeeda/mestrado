As dependências são estas abaixo, agora falta ver os "comandos" em cada target...

all -> keso -> BUILDER -> 
    builder/keso/compiler/config/parser/ConfigReader.java,
    buildstamps/stamp-imclasses

builder/keso/compiler/config/parser/ConfigReader.java ->
    builder/keso/compiler/config/ConfigReader.jj -> (X)

buildstamps/stamp-imclasses -> 
    createNodes.pl,
    $(IMCLASSTEMPLATES)

createNodes.pl -> (X)

legenda: (X) == não depende de mais nada

-------------------------------------------------------------------------------
A variável IMCLASSTEMPLATES é apenas uma lista de arquivos .pm
Mas ela não é usada no alvo buildstamps/stamp-imclasses, portanto vou 
ignora-lá. De forma semelhante, createNodes.pl é necessário ao alvo e usado no alvo buildstamps/stamp-imclasses. Porém como createNodes.pl não é um alvo e sim um arquivo pré-existente, não vou coloca-lo na lista de dependências de buildstamps/stamp-imclasses

IMCLASSTEMPLATES := templates/constant_folding.pm  templates/dumpBC.pm  templates/processStack.pm    templates/translate.pm templates/copyNode.pm          templates/extras.pm  templates/readableString.pm  templates/typeinfo.pm templates/costs.pm             templates/init.pm    templates/ssa_optimizer.pm   templates/visitNode.pm

Pelo mesmo motivo de createNodes.pl, vou tirar ConfigReader.jj da lista de dependências do ConfigReader.java

BUILDER := echo buildstamps/jino-exported.jar
 == buildstamps/jino-exported.jar ?

GLBREV == exported

Considerando que a variável BUILDER do makefile_no_optimizations vale:
    buildstamps/jino-exported.jar
vou defini-lá no build.xml como uma property

-------------------------------------------------------------------------------
Notas sobre os comandos dos targets:

$(JAVAC) $(JOPT_BUILDER) $(SRC_BUILDER)
javac -d classes -bootclasspath ${JDK}/jre/lib/rt.jar -sourcepath . `find . -name "*.java"`

Análise do comando acima:
javac => compilador

-d => -d <directory>             Specify where to place generated class files
    (equivalente no Ant): destdir

-bootclasspath => -bootclasspath <path>      Override location of bootstrap class files
    (equivalente no Ant): bootclasspath

-sourcepath => -sourcepath <path>         Specify where to find input source files
    (equivalente no Ant): sourcepath

`find . -name "*.java"` => os arquivos .java a serem compilados
    no ant este seria o argumento do srcdir

-------------------
JDK=/usr/local/local_programs/java/jdk1.6.0_20

JOPT_BUILDER=-d classes -bootclasspath ${JDK}/jre/lib/rt.jar -sourcepath .

SRC_BUILDER=`find . -name "*.java"`

-------------------

-------------------------------------------------------------------------------



