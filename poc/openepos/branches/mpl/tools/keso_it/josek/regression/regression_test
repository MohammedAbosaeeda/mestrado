#!/bin/sh
#
#

JOSEKOPTS="-D codecomments -D assertions -h x86_64"
#JOSEKOPTS="${JOSEKOPTS} -D debug"
CFLAGS="-g -ansi -Wall -O2 -D_POSIX_SOURCE -D_XOPEN_SOURCE=500"
#CFLAGS="-ansi -pedantic -Wall -Werror -O2"
#CFLAGS="-Wall -O2"
FAILONERROR="1"

for i in testcase_*; do
	if [ ! -d "$i" ]; then
		continue
	fi
	echo -n "Regression testing '${i}'"
	cd "$i"
	java -cp ../../classes josek.JOsek -f configuration.oil -c ../../josek/code/arch/ -o ./ ${JOSEKOPTS}
	echo -n "."

	echo "--- os.c" > compilermsg.txt
	LC_MESSAGES=C gcc ${CFLAGS} -c -o os.o os.c >> compilermsg.txt 2>&1
	result="$?"
	if [ "$result" != "0" ]; then
		echo "FAILED (Compiling os.c)"
		cd ..
		test "$FAILONERROR" != "1" || cat ${i}/compilermsg.txt; exit 1
		continue
	fi
	echo -n "."
	echo "--- dispatch.s" >> compilermsg.txt
	LC_MESSAGES=C gcc ${CFLAGS} -c -o dispatch.o dispatch.s >> compilermsg.txt 2>&1
	result="$?"
	if [ "$result" != "0" ]; then
		echo "FAILED (Compiling dispatch.s)"
		cd ..
		test "$FAILONERROR" != "1" || cat ${i}/compilermsg.txt; exit 1
		continue
	fi
	echo -n "."
	echo "--- testcase.c" >> compilermsg.txt
	LC_MESSAGES=C gcc ${CFLAGS} -o testcase dispatch.o os.o testcase.c >> compilermsg.txt 2>&1
	result="$?"
	if [ "$result" != "0" ]; then
		echo "FAILED (Compiling testcase.c)"
		cd ..
		test "$FAILONERROR" != "1" || cat ${i}/compilermsg.txt; exit 1
		continue
	fi
	echo -n "."
	
	./testcase > output.txt
	echo -n "."
	diff output.txt expected_output.txt > /dev/null 2>&1
	result="$?"
	if [ "$result" != "0" ]; then
		echo "FAILED (Results differ)"
		cd ..
		test "$FAILONERROR" != "1" || diff ${i}/output.txt ${i}/expected_output.txt; exit 1
		continue
	fi

	grep -v -E '^--- ' compilermsg.txt > /dev/null 2>&1
	result="$?"
	if [ "$result" == "0" ]; then
		echo "WARNINGS"
	else
		echo "PASSED"
	fi
	cd ..
done

