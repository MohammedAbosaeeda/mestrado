/* THIS FILE IS AUTO GENERATED BY KESO! DON'T EDIT */

#include <keso_support.h>
#include <keso_types.h>
#include "global.h"
#include "domains.h"
#include "irr.h"


/* static references */
volatile object_t* static_ref[KESO_NUM_STATIC_REFS];

domain_t domain_desc = {
	.heap.irr.freeslots=128,
	.heap.irr.slotSize=8,
	.heap.irr.heap_size=1024,
	.heap.irr.freemem=(irr_listel_t*) keso_epos_d_dom1_heap,
	.heap.irr.sasls=0,
	.heap.irr.heap_top=(irr_listel_t*)keso_epos_d_dom1_heap,
	.heap.irr.colorbit=2,

};

/* Determine the size in slots of the object
 * pointed to by obj
 */
obj_size_t keso_objSize(obj_size_t slot_size, object_t *obj) {
	obj_size_t size = CLASS(obj->class_id).size;

	if(keso_isArrayClass(obj->class_id)) {
		/* element size * element count */
		size *= ((array_t*) obj)->size;
		/* plus size of array header */
		size += sizeof(array_t);
	}

	size += slot_size-1;
	size /= slot_size;
	return size;
}


