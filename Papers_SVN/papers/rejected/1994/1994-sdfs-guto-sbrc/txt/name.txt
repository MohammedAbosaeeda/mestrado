%-------------------------------------------------------------------------------
% SERVIDOR DE NOMES DE OBJETOS
%-------------------------------------------------------------------------------
\section {Servidor de Nomes de Objetos}

O servidor de nomes de objetos é a entidade responsável pela maior parte das abstrações de objetos do sistema. Qualquer sistema computacional pode ser visto como um conjunto de processos que fazem uso, compartilhado ou não, de um conjunto de recursos. Já vimos anteriormente que o conceito de processo está presente no nosso modelo de sistema através da combinação de tarefas e de fluxos de execução. Analisaremos agora a maneira como os recursos são tratados pelo sistema.

Cada recurso disponível no sistema será modelado como um objeto e descrito perante o sistema por um par ordenado (nome, identificador). O campo \underline{nome} identifica um objeto perante o conjunto de usuários do sistema através de uma cadeia de caracteres qualquer. Esses nomes de objetos são organizados em diretórios hierárquicos, formando uma árvore. O campo \underline{identificador} de um objeto é um número de 80 bits único no mundo. Seria muita pretenção propormos um esquema de identificação global de objetos, então optamos por combinar alguns conceitos já estratificados de identificação de nodos, dispositivos e objetos.

Outra classe que deve ser identificada perante o sistema e, em especial, perante o servidor de nomes de objetos, são os usuários. Como o sistema não faz restrições sobre o acesso remoto aos recursos disponíveis, devemos poder identificar usuários também de uma forma global.

\subsection {Nomes de Objetos}

Dissemos anteriormente que objetos são identificados perante os usuários através de nomes e que podem ser organizados em árvores. Os diretórios de nomes de objetos também são objetos de uma classe particular. Observando a figura \ref{tree} podemos ver seis classes distintas de objetos. Todas elas, com exceção das classes dos objetos "hd0" e "st0", serão discutidas nas próximas seções. As classes excluídas estão associadas a dispositivos de entrada e saída e são de responsabilidade dos servidores de dispositivos.

\putpict {../fig/tree.ps} {12} {9} {Exemplo de árvore de objetos} {tree}

A figura \ref {pathname} mostra uma definição formal, através de um diagrama de sintaxe, de um {\em pathname}. O {\em token} nodo é aquele definido pela rede Internet. Ele é formado por uma lista de nomes separados por "." que identifica um dado nodo de rede. Maiores informações sobre a nomenclatura utilizada pela rede Internet podem ser obtidas em \cite{rfc819}, \cite{rfc1034} e \cite{rfc1035}.

\putpict {../fig/pathname.ps} {14} {2.2} {Diagrama de sintaxe de um {\em pathname}} {pathname}

Vemos no diagrama que o único elemento obrigatório de um {\em pathname} é um nome de objeto. Quando referimos um objeto somente pelo nome, estamos pressupondo que o mesmo esteja no diretório corrente do nodo local. Já se um {\em pathname} começar com um nome de nodo, então o objeto em questão é remoto, salvo quando o nodo for o próprio nodo local.

Se a seqüência de nomes de objetos começar com "/", dizemos que o {\em pathname} é absoluto, i. e., relativo à raiz da árvore de objetos. Já, se começar com um nome de objeto, dizemos que o {\em pathname} é relativo ao diretório corrente.

Existem dois nomes de objetos especiais: "." e "..". Cada diretório possui essas duas entradas, sendo que "." representa o próprio diretório e ".." representa o diretório "pai" do referido diretório.


\subsection {Identificadores de Objetos}

Um objeto é identificado perante os usuários por um nome qualquer. Porém, nomes são elementos de difícil manuseio para o sistema operacional. Então, cada objeto possui, além do nome, uma identificação interna. Essa identificação interna é bastante similar ao conceito de {\em capability} \cite {mul84b}, no sentido em que um usuário deve obter a identificação de um objeto para poder acessá-lo.

Um identificador de objeto é uma estrutura formada por quatro campos descritos como segue:

\begin {itemize}

\item Identificador de nodo: é um número de 32 bits que identifica um nodo perante o mundo. Esse número é o número IP ({\em Internet Protocol}) da Internet. Este identificador foi escolhido por ser a Internet a rede mais estável e utilizada de nossos dias;

\item Identificador de dispositivo: é um número de 16 bits que identifica uma classe de dispositivos de memória secundária em um nodo. Esse identificador é um elemento interno do sistema operacional. A única exigência é que 16 bits sejam suficientes para diferenciar todos as classes de dispositivos de um nodo;

\item Identificador de unidade: é um número de 16 bits que identifica uma unidade de uma classe de dispositivos. Este campo complementa o identificador de dispositivo;

\item Identificador de arquivo: é um número de 16 bits que identifica um arquivo em um dispositivo de memória secundária.

\end {itemize}


\subsection {Identificadores de Usuários}

Usuários são as entidades que manipulam os objetos do sistema, logo, é importante que o sistema identifique-os, possibilitando assim validações de acessos. Veremos no próximo capítulo como autorizações de acesso a objetos são concedidas ou negadas. Por hora estamos interessados somente em identificar os usuários do sistema.

Um usuário qualquer é identificado perante o sistema por um número de 64 bits dividido em três campos:

\begin {itemize}

\item Identificador do nodo: como definido na seção anterior, é um número de 32 bits equivalente ao número IP da Internet;

\item Identificador do grupo: um número de 16 bits que identifica um grupo de usuários do nodo local;

\item Identificador local do usuário: um número de 16 bits que identifica um usuário dentro de um determinado grupo.

\end {itemize}


\subsection {Classes de Objetos}

Os objetos do sistema podem ser agrupados em classes, de acordo com a sua natureza. Note que os objetos aqui referidos são apenas uma parte do conjunto global dos objetos do sistema. O servidor de nomes de objetos trata somente de objetos de memória secundária.  Outros objetos como semáforos, tarefas e mensagens são de competência de outros componentes do sistema operacional.

\begin {table} [htbp]
\sf
\begin {center}
\begin {tabular} {|l|l|}
\hline
Classe    & Descrição Resumida                         \\
\hline
FILE      & Arquivo ordinário                          \\
DIRECTORY & Diretório de nomes de objetos              \\
PIPE	  & Canal de comunicação entre processos       \\
MBOX      & Caixa postal para comunicações assíncronas \\
CDEV      & Dispositivo a caracter                     \\
BDEV      & Dispositivo a bloco                        \\
BRIDGE    & Conexão entre dois dispositivos a bloco    \\
REMOTE    & Qualquer objeto remoto                     \\
\hline
\end {tabular}
\end {center}
\caption {Classes dos objetos tratados pelo servidor de nomes} 
\label {classes}
\end {table}

A tabela \ref {classes} mostra uma lista das classes de objetos pertinentes ao servidor de nomes de objetos. Note que a classe REMOTE é apenas um indicador de que o objeto em questão é remoto. A classe do objeto só será definida pelo nodo que o contém.
