\section{Trabalhos Relacionados}
\label{sc:relacionados}


\textsc{Grace-OS}~\cite{Yuan:2004} é um sistema operacional eficiente em 
termos de energia para aplicações móveis de multimídia.
Esse sistema usa técnicas de adaptações multi-camadas para
garantir \qos{} em sistemas com \emph{software} e \emph{hardware} adaptativos.
\textsc{Grace-OS} combina escalonamento de tempo real com mecanismos de DVS
para dinamicamente gerenciar o consumo de energia. Ele foi
implementado sobre o sistema operacional \textsc{Linux} e suporta apenas tarefas
\emph{soft real-time}. \textsc{GRUB-PA}~\cite{Scordino:2004} é, de certa forma, 
semelhante ao \textsc{Grace-OS}. A principal diferença é que \textsc{GRUB-PA}
suporta tanto tarefas \emph{soft real-time} quanto 
tarefas \emph{hard real-time}.

Niu~\cite{Niu:2005} propôs minimizar a anergia consumida para sistemas 
\emph{soft real-time} enquanto garante requisitos de \qos{}. 
Esse objetivo é alcançado
através de um algoritmo de escalonamento híbrido (estático/dinâmico) que
utiliza \textsc{DVS} e através de técnicas de particionamento do conjunto de
tarefas em tarefas obrigatórias e em tarefas opcionais. Nesse trabalho,
os requisitos de \qos{} são qualificados pela restrição \textit{(m,k)}, 
a qual especifica
que tarefas devem atender no mínimo \textit{m} \emph{deadlines} em qualquer
\textit{k} liberações de tarefas consecutivas. Em um trabalho semelhante,
Harada~\cite{Harada:2006} propôs resolver o compromisso entre a maximização 
dos níveis de \qos{} e a minimização do consumo de energia. Nesse trabalho, cada
tarefa é dividida em parte obrigatória e em parte opcional, e é realizada a
alocação de ciclos e freqüência do processador com garantias de \qos{}.

Outras pesquisas exploram um balanceamento entre \qos{} das aplicações e consumo
de energia através de adaptações nas aplicações visando atender o tempo
especificado pelo usuário. Um sistema que utiliza essa técnica 
é \textsc{Odyssey}~\cite{Flinn:1999}. \textsc{Odyssey} realiza o monitoramento
da energia fornecida e da energia necessária para executar as tarefas.
Com essas informações o monitor é capaz de selecionar o estado 
correto entre economia de energia e qualidade da aplicação. Esse trabalho 
também demonstra como as aplicações podem dinamicamente
alterar seus comportamentos (``fidelidade'' dos dados) com o objetivo de 
economizar energia.

\textsc{ECOSystem}~\cite{Zeng:2002} é outro sistema operacional que suporta 
aplicações adaptativas. Esse sistema é baseado em uma ``moeda'' corrente que as
aplicações utilizam para ``pagar'' (alocar) e utilizar recursos do sistema (CPU,
disco, rede), chamada \textit{currentcy}. 
O sistema distribui \textit{currentcies} periodicamente para as tarefas de
acordo com uma equação que define uma velocidade de descarga que a bateria pode
assumir para forçar o sistema a durar um período de tempo definido. Isso faz com
que as aplicações adaptem as execuções de acordo com seus \textit{currentcies}.
Esse modelo unifica o cálculo de
energia sobre os diferentes dispositivos de \emph{hardware} e proporciona uma
satisfatória alocação de energia entre as aplicações.

%- Computação Imprecisa - colocar algo relacionado
