\section{Implementation}
\label{sc:implementacao}

%- Utilização do \epos{}. (Explicar sobre o \epos{} em 2 ou 3 parágrafos)

%Um protótipo foi desenvolvido com o intuito de testar a abordagem de escalonamento proposta usando o \epos{} (\emph{Embedded Parallel Operating System})~\cite{Froehlich:PHD:2001}. \epos{} é um \emph{framework} com componentes hierarquicamente organizados para a geração de sistemas específicos a uma determinada aplicação embarcada. O \epos{} analisa o conjunto das aplicações dedicadas que ele deve suportar para a geração do sistema, e então, configura o sistema de acordo. Além disso, através das abstrações, mediadores de \emph{hardware}~\cite{Polpeta:EUC:2004} e aspectos, o \epos{} permite o desenvolvimento de aplicações totalmente independentes de plataformas. Esse sistema suporta desde uma arquitetura de 32 bits (IA32, PowerPC) até uma arquitetura de 8 bits (AVR8).


A prototype was developed in order to test the proposed scheduler using 
\epos{} (\emph{Embedded Parallel Operating System})~\cite{Marcondes:ETFA:2006}.
\epos{} is a framework of hierarchically organized components that generates
application-specific runtime support systems. To do that \epos{} analyzes the
set of dedicated applications it must support prior to
system generation time, thus configuring the system accordingly. Furthermore,
through the separation of system abstractions,
hardware mediators and scenario aspects, \epos{}
allows the development of fully platform-independent applications. This system
supports from 32-bits architectures (IA32, PowerPC) to 8-bits architecture
(AVR8).


% Infra-estrutura de gerência de energia

%No \epos{}, todo componente do sistema implementa uma interface uniforme de gerência de energia~\cite{Hoeller:DIPES:2006}. Essa infra-estrutura permite às aplicações interagirem com o sistema para implementar uma gerência de energia apropriada. Com a utilização dessa infra-estrutura, o \epos{} disponibiliza um gerente de energia dinâmico com baixos \ovs{} para a aplicação~\cite{Wiedenhoft:ETFA:2007}. Esse gerente de energia usa heurísticas ``replugáveis'' para a gerência de energia, permitindo configurabilidade e adaptabilidade para aplicações específicas. O gerente dinâmico do \epos{} possui diferentes modos de operação: a possibilidade de escolha se o gerente será habilitado ou não, a possibilidade de configurar somente os componentes desejados pela aplicação para a gerência, e se o gerente será ativo ou passivo na gerência de energia.

In \epos{}, every system component implements a uniform power management
interface~\cite{Hoeller:DIPES:2006}. This infrastructure allows applications to
interact with the system to implement proper energy consumption management for
embedded systems. Through the use of this infrastructure \epos{} provides a
low-overhead dynamic power manager for embedded
systems~\cite{Wiedenhoft:ETFA:2007}. This power manager uses re-pluggable
heuristics for power management, allowing configuration and adaptability to
specific applications. The \epos{} power manager has different operation modes,
such as the possibility to choose if the manager will be on or off, the
possibility of configuring only the desired components by the application for
the power management, and if the manager will be active or passive in the power
management.


%- \epos{} possui um sistema de monitoramento dos níveis de carga da bateria.
%Explicar como é realizado e alguns problemas envolvidos, a
%figura~\ref{fig:graficoBateria} é o gráfico de descarga da bateria dividido em 
%10 fatias, chamadas épocas. (Ver como posso citar o trabalho do raphael)
%Para o objetivo deste trabalho, o \epos{}, também, disponibiliza a abstração ao acesso as informações da bateria, como o nível da bateria e estimativas do tempo de vida do sistema. Nesta versão atual, a estimativa do tempo de vida do sistema é realizada somente pela análise da velocidade de descarga do nível da bateria.

%\epos{} disponibiliza, também, um monitor da carga da bateria, o que contribui  para alcançarmos os objetivos deste trabalho. Para obter a carga da bateria, o monitor do \epos{} é baseado na observação da tensão da mesma, pois as baterias possuem a característica de ter suas tensões reduzidas conforme a utilização. Entretanto, existem alguns detalhes a serem observados, pois a tensão amostrada não é relacionada linearmente com a taxa de descarga da bateria, o sistema não tem a capacidade de converter toda a tensão fornecida em recurso utilizável e, também, existe uma tensão mínima em que o sistema opera. A figura~\ref{fig:graficoBateria} apresenta o gráfico Tensão X Tempo, no qual pode ser observado que a taxa de diminuição da tensão é variável no tempo. A partir disso, o monitor estabelece uma relação discreta entre a tensão obtida e a carga da bateria, através da divisão das tensões obtidas em 10 fatias de tempo, chamadas épocas, nas quais as tensões possuem diferentes variações, como apresentado no gráfico. Cada época corresponde a uma porcentagem da capacidade nominal da bateria utilizada.

\epos{} also provides a battery charge monitor, which contributes to achieve the
objectives of this work. The \epos{} monitor is based on the battery voltage
observation in order to get the battery charge, because the battery
characteristic is to have its tension reduced as the use. However, there are
some details to be observed, because the sampled voltage is not linearly related
to battery discharge rate, the system does not have the ability to convert all
provided tension in usable resource and also there is a minimum voltage that
the system works. Figure~\ref{fig:graficoBateria} presents the Voltage X Time
graphic, which can be observed that the voltage decrease rate is variable in
time. Thus, the monitor establishes a discreet relationship between the voltage
and battery charge through the division of the obtained voltages in 10 time
slices calls seasons, which the voltages have different variations as the 
graphic shows us. Each season corresponds to a nominal capacity percentage of
the used battery.


\begin{figure}[!ht]
\centering
     {\includegraphics[scale=0.5]{figuras/graficoBateria.eps}}
     \caption{Voltage X Time graphic.}
     \label{fig:graficoBateria}
\end{figure}
%Determinados sistemas embarcados possuem a possibilidade de configurar um
%perfiférico, chamado conversor analógico digital(\textsc{ADC}), para realizar
%as leituras da tensão da bateria.

%O monitor do \epos{} não realiza um acompanhamento constante da tensão real da bateria, apesar disso ser possível, pois cada leitura consome energia para ser realizada, além de um \ov{} considerável para a aplicação. Para diminuir esses efeitos, o monitor utiliza uma estrutura com informações conhecidas previamente que permite acompanhar o consumo de energia de uma forma aproximada. As informações são a respeito das características específicas da bateria e dos consumos de energia pelos componentes de \emph{hardware} do sistema a ser monitorado. No início da execução o monitor verifica a carga da bateria através da tensão, como mencionado anteriormente, e durante a execução atualiza esse valor com as energias consumidas pelos periféricos do sistema.

The \epos{} monitor does not implement a constant tracking of the real battery
voltage, as each sampling consumes energy to be
realized, in addition to considerably overhead for the application. In order to
reduce these effects, the monitor uses a structure with information previously
known which allows tracking the energy consumption in an approximate way. The
information are in relation to specific characteristics of the battery and
energy consumption by the system hardware components that will be monitored. The
monitor verifies the battery charge through the voltage in the beginning of the
execution, and during the execution updates the value
with energy consumed by system peripherals.


%- Explicar sobre a implementação da computação imprecisa no \epos{}. (2 ou 3 parágrafos, colocar alguma figura aqui - diagramas de classe) Explicar também que é possível cancelar a parte obrigatória no meio, aplicação fica responsável de assegurar a validade dos dados computados pela parte opcional. Possibilidades: colocar bits de controle ou mesmo \emph{timestamp} da última atualização dos dados.

%As características e as funcionalidades do \epos{} apresentadas são vantajosas para a nossa proposta. A partir disso, nós estendemos o \epos{} para suportar o nosso algoritmo de escalonamento com tarefas imprecisas e execuções condicionais aos parâmetros desejados (tempo e energia).


%The \epos{} features and functionality presented are advantageous to our
%proposal. Thus, we extended \epos{} to support our scheduler algorithm with
%imprecise tasks and conditional executions to desired parameters, i.e., time and
%energy.



%As tarefas imprecisas no \epos{} foram modeladas com base nas funções monotônicas da computação imprecisa. Nessa modelagem, as funções melhoram a qualidade do resultado durante o tempo que permanecem executando e na pior das hipóteses não alteram o resultado, ou seja, a parte obrigatória retorna a solução com o mínimo de \qos{} necessária para a continuidade da aplicação e a parte opcional faz refinamentos sucessivos nessa solução. O término dessas funções pode ocorrer em qualquer momento da execução sem ocasionar problemas de integridade no resultado, assim sendo, o escalonador pode decidir em qualquer instante finalizar a execução da parte opcional. A aplicação fica responsável pela integridade dos resultados através de diferentes métodos, como o uso de bits de controle ou mesmo o uso de \emph{timestamps} da última atualização dos dados. 

We extended \epos{} to support our scheduler algorithm with
imprecise tasks and conditional executions to desired parameters, i.e., time and
energy.
The tasks model in \epos{} was based on monotone imprecise tasks. In this
model, the monotone tasks improve the result quality at the time in
execution and the worst case do not change the result. Thus, the mandatory
subtasks generate results with the minimum \qos{} necessary to guarantee
that these results are useful, and the optional subtasks realize successive
refinements that results. The completion of these tasks can occur at any
execution time without cause integrity problems in the results. Therefore, the
scheduler can decide at any instant to finalize the optional subtask execution.
The application is responsible for the results integrity by different methods
such as the use of control bits or the use of last data update timestamps.


%A implementação das tarefas imprecisas no \epos{} foi realizada através da criação de duas \emph{threads}, uma contendo o fluxo de execução da parte obrigatória e outra com o fluxo de execução da parte opcional. O sistema cria essas \emph{threads} de uma forma transparente para o programador da aplicação. Essa abordagem apenas espera que o programador especifique, no momento da criação de uma tarefa imprecisa, dois ponteiros para funções: um para a parte obrigatória e outro para a parte opcional, com os seus respectivos parâmetros.

The imprecise tasks implementation in \epos{} was realized through the creation
of two threads: one containing execution flow to handle the mandatory part and
another with the execution flow to handle the optional part. The system
creates these threads in a transparent manner to the application programmer.
This approach only expects the programmer to specify, when creating a imprecise 
thread, two entry points: one for the mandatory subtask and another
for the optional subtask with their parameters.


%Na execução, o escalonador escolhe sempre a parte de mais alta prioridade de acordo com o nosso algoritmo baseado no \textsc{EDF}. As partes opcionais são escalonadas quando não existirem partes obrigatórias com o estado \textit{Pronto} e se houver energia, ou seja, as partes opcionais possuem prioridades inferiores as partes obrigatórias. Caso uma parte obrigatória entre no estado \textit{Pronto} e sua parte opcional ainda não tenha terminado de executar no período anterior, o escalonador imediatamente finaliza a execução da parte opcional. Essas características fazem com que não ocorram perdas dos \deadlines{} das partes obrigatórias. O contexto da parte opcional é sempre reiniciado quando ela sai do estado \textit{Pronto} e entra no estado \textit{Esperando}.

The scheduler in execution always chooses the highest priority subtask in
accordance with the deadlines as our algorithm is based in \textsc{EDF}. The
optional subtasks are scheduled if there are not mandatory subtasks in
\textit{READY} state and if there is energy enough to meet battery lifetime
specified by the application, i.e., optional subtasks have lower priorities than
mandatory subtasks. When a mandatory subtask enters in \textit{READY} state and
its optional subtask is not yet finished the execution in the previous period,
the scheduler immediately suspends this optional subtask execution. These
characteristics prevent mandatory subtasks deadlines losses. The optional
subtasks contexts are always restarted in a new task period.
%when they leave the \textit{READY} state and enter in \textit{WAITING} state.


%O escalonador também atualiza, em tempo de execução, o $T_{t \kappa}$ com o tempo decorrido no sistema e o $E_{t \kappa}$ com a utilização do monitor de energia do \epos{}. Com essas variáveis atualizadas, o escalonador realimenta a equação (\ref{eq:escalonador:ek}) em períodos $\pi$ de tempos para determinar se o sistema é capaz de manter a carga de trabalho sem que a bateria termine antes de $T_{t \kappa}$ seja alcançado. $\pi$ irá depender do resultado da última análise de energia. No melhor caso, a equação (\ref{eq:escalonador:ek}) é atendida e todas as partes das tarefas podem ser executadas. Caso contrário, as partes opcionais serão descartadas e o escalonador executa (nesses intervalos que as partes opcionais estariam em execução) o gerente de energia do \epos{} que encontra-se no modo passivo. Nesse caso, além da economia de energia por não executar as partes opcionais, o gerente reduz o consumo global do sistema através do uso de técnicas de gerência de energia. No instante $\kappa+\iota$ em que o escalonador identifique que $T_{t \kappa+\iota}$ pode ser alcançado novamente, o sistema volta a permitir a execução das partes opcionais. 

The scheduler also updates at execution-time the $T_{t \kappa}$ with elapsed
time and the $E_{t \kappa}$ using the \epos{} energy monitor. Scheduler
recalculates the equation (\ref{eq:escalonador:ek}) in periods $\pi$ with these
new values in order to check if the system is able to sustain the current
workload without running out of battery before the required lifetime $T_{t
\kappa}$ is achieved. $\pi$ will depend on the last energy analysis. In the best
case, equation (\ref{eq:escalonador:ek}) is respected and all parts of the tasks
can be executed. Otherwise, optional subtasks are discarded and, taking
advantage of the idle period created, the scheduler executes the \epos{} power
manager in passive mode. In addition to saving energy by not execute the
optional subtasks, the power manager reduces the system energy consumption
through the use of power management techniques. The optional subtasks return to
execution when the scheduler identify $T_{t \kappa+\iota}$ can be met again in
instant $\kappa+\iota$.


%- Diagrama de sequencia seria interessante



