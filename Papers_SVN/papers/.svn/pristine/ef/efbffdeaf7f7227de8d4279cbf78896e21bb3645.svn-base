
\section{Adaptively sustaining system operation}
\label{sec:adaptation}

% Rechargeable energy sources correctness depend on avoiding failure for running out of energy
Systems featuring rechargeable energy sources have their lifetime bounded to their ability to sustain the energy needed for its operation.
This contrasts, in part, to the traditional concept that the lifetime of a wireless sensor network without renewable energy sources is bounded to the lifetime of the batteries of its nodes.
In the context of real-time systems, the successful operation of a system depends on the compliance to the requirements of its critical parts.
As a consequence, an energy-aware scheduler for real-time systems must somehow guarantee that there will be enough energy to supply the critical parts of the system.

% The case for adapting the system - keep power bellow the discharge rate 
A basic approach for guaranteeing battery lifetime in a system is defining the maximum discharge rate of subsequent iterations ($D_{i+1}$).
This rate is a function of current battery charge ($E_{batt}^i$) and remaining required operation time ($t_r$ is the required time), as shown in Equation~\ref{eq:rate}.
An energy overload takes place when the system demand for energy surpasses this limit.
In this situation, it becomes impossible to keep the energy consumption bellow $D_i$ without, somehow, adapting the system.
Here, a scheduler adjusts periodically the execution rate of best-effort tasks (called ``BET rate'' from now on) to the maximum rate satisfying the computed battery discharge rate.
\begin{equation}
\label{eq:rate} D_{i+1} = \frac{E_{batt}^i}{t_r - t_i}
\end{equation}

% Energy reserve for hard real-time tasks
One assumption of the proposed energy-aware scheduler is that 100\% of the hard real-time tasks execute until the system reaches the targeted lifetime.
Consequently, the scheduler needs to reserve energy for those tasks, what makes all scheduling approaches studied in this work conservative.
This reserve ($E_{res}$), as Equation~\ref{eq:reserve}\footnote{$\Gamma$ is the set of hard real-time tasks; $T_{\Gamma_j}$ is the period of the $jth$ task of $\Gamma$; and $E_{\Gamma_j}$ is the worst-case energy consumption of the $jth$ task of $\Gamma$.} shows, is the sum of the worst-case energy consumption ($E_{\Gamma_j}$) of all instances of hard real-time tasks ($\Gamma$) to be released until the system reaches the targeted lifetime ($t_r$).
\begin{equation}
\label{eq:reserve} E_{res}^i = \sum_{j=0}^{|\Gamma|}{\frac{t_r - t_i}{T_{\Gamma_j}} \cdot E_{\Gamma_j}}
\end{equation}

% Heuristic approaches are proposed to allocate excess energy to best-effort tasks
The following paragraphs describe the four approaches evaluated in this work.
The approaches follow the premises specified on Equations~\ref{eq:rate} and~\ref{eq:reserve}.
This means that all proposed approaches will reserve energy for the hard real-time tasks and allocate excess energy to BET tasks.

% \subsection{BGR -- \bgr}

% Describe the approach
Equation~\ref{eq:bgr} defines the first approach: \bgr~(BGR).
BGR allocates all excess energy (i.e. energy available for BET tasks) to the BET tasks that will run in the next iteration.
At first sight, it might not be a wise decision once the system may run out of excess energy very quickly.
It may not happen, however, in systems where incoming energy exceed consumed energy in an iteration period.
Another drawback of this approach may be its deployment in systems where energy income is sporadic or periodic.
For instance, a photovoltaic system using this approach may perform well during the day but may run out of excess energy during the night due to the absence of incoming energy.
The same may happen with wind turbine systems when a long lull period happens.
\begin{equation}
\label{eq:bgr} BGR_i = \min \left (~1.0~,~\frac{E_{batt}^i - E_{res}^i}{\sum_{j=0}^{|\beta|}{\frac{(t_{(i+1)} - t_i)}{T_{\beta_j}} \cdot E_{\beta_j}}}~\right )
\end{equation}

% TODO: Reasoning: it is highly dependent on energy buffer size (i.e. larger buffers render more excess energy)

% TODO: Graphically show the dependencies using a synthetic example

% \subsection{BWR -- \bwr}

% Describe the approach
Equation~\ref{eq:bwr} presents an approach to prevent the system from running out of excess energy during periods of low energy income and, also, to make a fairer distribution of BET rate along time.
This heuristic, the \bwr~(BWR), divides the excess energy among distinct time windows ($w_s$).
Although ``fairer'', this approach may negatively affect the BET rate depending on the amount of excess energy available to the system, i.e. the size of the energy storage.
It is also sensitive to the relation between the desired lifetime ($t_r$) and time window size ($w_s$). 
\begin{equation}
\label{eq:bwr} BWR_i = \min \left (~1.0~,~\frac{\frac{E_{batt}^i - E_{res}^i}{(t_r - t_i) \div w_s}}{\sum_{j=0}^{|\beta|}{\frac{(t_{(i+1)} - t_i)}{T_{\beta_j}} \cdot E_{\beta_j}}}~\right )
\end{equation}

% TODO: Reasoning: supposed to be fairer but affects significantly the BET rate. Highly dependent on buffer size, and on the relation (lifetime / window size)

% TODO: Graphically show the dependencies using a synthetic example

% \subsection{BWAR -- \bwar}

% Making suppositions about the future energy income
Two other approaches address the enhancement of the performance of the energy allocator to handle sporadic and periodic energy sources.
Both approaches deal with variations in energy income spreading the excess energy evenly across the remaining operation time of the system.
This may prevent the system from passing long periods of time without being able to execute BET tasks.
Another addition to these policies is that both approaches try to predict the short-time future of energy income based on recent history.
This is particularly useful for systems where the storage (i.e. battery) cannot accommodate all the incoming energy, because it helps to reduce the wasted energy.

% Describe the approach
Equation~\ref{eq:bwar} shows the \bwar~(BWAR).
BWAR tries to raise BET rate by predicting that the energy income for the next iteration will be the average of the energy income of the previous iterations.
In the equation, $R$ is the series of incoming energy, $w$ is the number of previous iterations taken into account for the average, and $w_s$ is the length of each iteration.
This approach may perform well for sporadic energy sources and aleatory energy sources, such as wind.
For periodic energy sources such as the solar-based ones, the average may render several errors.
Moreover, the prediction accuracy of this method is highly dependent on the size of the look-back window.
% TODO: plot BWAR prediction error.
As can be seen in Figure~\ref{figtwo:plot_1dayplot_1year} (top), although interferences exist (e.g. clouds blocking sunlight), the tendency of the solar irradiance during a day shows a forth-order shape, raising during the first half of the day and lowering on the second half.
Thus, using recent average may be conservative during the first half of the day, and too aggressive during the second half.
\begin{equation}
\label{eq:bwar} BWAR_i = \min \left (~1.0~,~\frac{\frac{E_{batt}^i - E_{res}^i}{(t_r - t_i) \div w_s} + \frac{\sum_{j=i-(w+1)}^{i-1}{R_j}}{w}}{\sum_{j=0}^{|\beta|}{\frac{(t_{(i+1)} - t_i)}{T_{\beta_j}} \cdot E_{\beta_j}}}~\right )
\end{equation}

% TODO: Reasoning: dependent on the behavior of the input energy. Buffer size has less importance.

% TODO: Graphically show the dependencies using a synthetic example


% \subsection{BWDR -- \bwdr}

% Describe the approach
To cope with the cited limitations of BWAR, \bwdr~(BWDR), shown in Equation~\ref{eq:bwdr}, tries to reduce the prediction errors by taking the energy income derivative into account instead of the recent average.
In the equation, $R_{i-1}$, which is the amount of income energy in the last period, is summed to the expected variation in the energy income for the current period, i.e. its derivative.
In this heuristic, the Newton's difference quotient method (the last fraction), which is a straightforward two-point estimation to compute the slope of a nearby secant line through the previous two points of the energy input curve, numerically approaches this derivative.
\begin{equation}
\label{eq:bwdr} BWDR_i = \min \left (~1.0~,~\frac{\frac{E_{batt}^i - E_{res}^i}{(t_r - t_i) \div w_s} + R_{i-1} + \frac{R_{i-1} - R_{i-2}}{t_{i-1} - t_{i-2}}}{\sum_{j=0}^{|\beta|}{\frac{(t_{(i+1)} - t_i)}{T_{\beta_j}} \cdot E_{\beta_j}}}~\right )
\end{equation}

% TODO: plot BWDR prediction error. (maybe)

% TODO: Reasoning: dependent on the behavior of the input energy. Buffer size has less importance. Compare behavior to BWAR

% TODO: Graphically show the dependencies using a synthetic example

