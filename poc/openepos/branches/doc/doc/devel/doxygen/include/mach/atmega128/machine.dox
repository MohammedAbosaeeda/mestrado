/*! @class System::ATMega128
    @ingroup

    @brief The ATMega128 machine implementation

    <!-- ******************************************************************* -->
    @fn static int_handler * System::ATMega128::int_vector(unsigned int i)
    @param i The interruption number
    @return The pointer of the handler function to interrupt <i>i</i> or 0 if <i>i</i> is greater than or equal to the interruption vector size
    @brief Returns the pointer to the handler function of an interrupt
    <!-- ******************************************************************* -->
    @fn static void System::ATMega128::int_vector(unsigned int i, int_handler *h)
    @param i The number of the interruption
    @param h The pointer to the handler function
    @brief Sets the handler function of an interruption
    
    <!-- ******************************************************************* -->
    @fn static Dev * System::ATMega128::seize(const Type_Id * type, unsigned int unit)
    @brief Not Implemented
    <!-- ******************************************************************* -->
    @fn static void System::ATMega128::release(const Type_Id & type, unsigned int unit)
    @brief Not Implemented
    <!-- ******************************************************************* -->
    @fn static void System::ATMega128::panic()
    <!-- ******************************************************************* -->
    @fn static void System::ATMega128::reboot()
    <!-- ******************************************************************* -->
    @fn static void System::ATMega128::poweroff()
    <!-- ******************************************************************* -->
    @fn static int System::ATMega128::irq2int(int i)
    <!-- ******************************************************************* -->
    @fn static int System::ATMega128::int2irq(int i)
    <!-- ******************************************************************* -->

*/
