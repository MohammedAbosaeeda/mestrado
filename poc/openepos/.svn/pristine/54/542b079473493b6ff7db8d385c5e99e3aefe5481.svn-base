#
#  Copyright (C) 2005 Christian Wawersich 
#
#  This file is part of the KESO Operating System.
#
#  It is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  Please contact wawi@cs.fau.de for more info.
#

.PHONY: builder kesoclasses userapps libKESO tags clean clean-keso clean-kesoclasses \
	clean-libkeso clean-builder clean-autosrc clean-doc jino-doc keso-doc update-www-doc \
	tags status benchmark

GLBREV=$(shell svnversion -n . | sed "s/\(.*:\|M\)//g")
BUILDER=$(shell echo buildstamps/jino-${GLBREV}.jar)

# KESORC should be set from the environment
# If it is not, a simple hello world will be built
KESORC?="rc/default.kcl"

SRC=`find libs/core -name "*.java"`
SRC_BUILDER=`find . -name "*.java"`

TAGLIBS=libs/test_compiler/ libs/debug
TAGLIBS+=builder
TAGLIBS+=libs/test_lukas libs/test_memory_types
TAGLIBS+=libs/test_portal libs/test_serial
TAGLIBS+=libs/tricore libs/avr libs/can libs/serialport libs/robertino
TAGLIBS+=libs/test_rpc
TAGLIBS+=libs/test_compiler
TAGLIBS+=libs/can_emu
TAGLIBS+=libs/posix
TAGLIBS+=libs/microbench
#TAGLIBS+=libs/kesocopter
#TAGLIBS+=libs/demo_ray

ifeq ($(JDK),)
	JDK=/local/java-1.4
endif

ifeq ($(JAVA),)
	JAVA=$(JDK)/bin/java
endif

ifeq ($(JAVACC),)
	JAVACC=javacc
endif

ifeq ($(CTAGBIN),)
	CTAGBIN="echo ctags missing; exit"
endif

JOPT_BUILDER=-d classes -bootclasspath ${JDK}/jre/lib/rt.jar -sourcepath .

all: keso 

# Build keso with default.kcl 
default:
	make KESORC=rc/default.kcl all

# imclasses
IMCLASSTEMPLATES=$(wildcard templates/*.pm)
buildstamps/stamp-imclasses: createNodes.pl $(IMCLASSTEMPLATES)
	@echo Creating intermediate classes
	@./createNodes.pl

# Config file parser
builder/keso/compiler/config/parser/ConfigReader.java: builder/keso/compiler/config/ConfigReader.jj
	@echo Creating parser
	cd builder; $(JAVACC) -OUTPUT_DIRECTORY=keso/compiler/config/parser keso/compiler/config/ConfigReader.jj

# Build the Java-2-C Compiler
builder:
	@rm -f $(BUILDER)
	@make $(BUILDER)

	
$(BUILDER): builder/keso/compiler/config/parser/ConfigReader.java buildstamps/stamp-imclasses
	@echo Compiling the Java-2-C Builder Rev. $(GLBREV)
	@cd builder/ ; mkdir -p classes ; $(JAVAC) $(JOPT_BUILDER) $(SRC_BUILDER)
	@jar cf0 $(BUILDER) builder/classes/
	@echo

benchmark:
	@mkdir -p bench_classes
	@$(JAVAC) -d bench_classes -sourcepath libs/core/ libs/core/keso/core/Task.java 
	@$(JAVAC) -d bench_classes -classpath bench_classes -bootclasspath $(JDK)/jre/lib/rt.jar -sourcepath libs/microbench libs/microbench/benchmark/BogoMIPS.java 
	$(JAVA) -Xint -classpath bench_classes benchmark.BogoMIPS
	$(JAVA) -client -classpath bench_classes benchmark.BogoMIPS
	$(JAVA) -server -classpath bench_classes benchmark.BogoMIPS

# spielerei ;-)
native: $(BUILDER) 
	@echo Compiling the Java-2-C Builder native
	@cd builder/classes ; gcj-3.4 --main=keso.compiler.Main -o ../../jinoc `find . -name "*.class"` 

# build libKESO
libKESO:
	@echo Building libKESO
	cd kore ; make -s

# build KESO system
keso: $(BUILDER) 
	@echo Creating keso-system for $(KESORC) 
	jino -bootmodules core -op $(KESOSRCPATH)/tmp/ -def $(KESORC)

# Targets to clean the source tree of everything that is autogenerated
clean: clean-keso clean-kesoclasses clean-libkeso clean-builder clean-autosrc clean-doc

clean-builder:
	rm -rf builder/classes

clean-autosrc:
	xargs -a buildstamps/stamp-imclasses   rm -f 2>/dev/null || exit 0
	xargs -a buildstamps/stamp-kesoautosrc rm -f 2>/dev/null || exit 0
	rm -f buildstamps/*
	rm -f builder/keso/compiler/config/parser/*.java

clean-keso:
	rm -rf tmp/*

clean-kesoclasses:
	rm -rf classes

clean-libkeso:
	cd kore ; make -s distclean

clean-doc:
	rm -rf doc/core/* doc/jino/*

# Targets for building various documentation
keso-doc:
	javadoc -d doc/core keso `find libs/core -name "*.java"`

update-www-doc:
	tar cf - doc/core/* | ( cd ../../www/ ; tar xf - ; svn status )

jino-doc:
	javadoc -d doc/jino keso `find builder/ -name "*.java"`

status:
	@svn status | grep -v "^?"

tags:
	$(CTAGBIN) $(SRC) kore/*.c kore/*.h `find $(TAGLIBS) -name "*.java"` 
